{"remainingRequest":"/Users/brandonluy/Desktop/admin-website/node_modules/thread-loader/dist/cjs.js!/Users/brandonluy/Desktop/admin-website/node_modules/babel-loader/lib/index.js!/Users/brandonluy/Desktop/admin-website/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/brandonluy/Desktop/admin-website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brandonluy/Desktop/admin-website/src/components/EnrollClientInTestPackages.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brandonluy/Desktop/admin-website/src/components/EnrollClientInTestPackages.vue","mtime":1639724274000},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/cache-loader/dist/cjs.js","mtime":1648530004744},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/thread-loader/dist/cjs.js","mtime":1648530004696},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/babel-loader/lib/index.js","mtime":1648530005330},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/cache-loader/dist/cjs.js","mtime":1648530004744},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/vue-loader/lib/index.js","mtime":1648530005500}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdFbnJvbGxDbGllbnRJblRlc3RQYWNrYWdlcycsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNsaWVudElkOiBudWxsLAogICAgICBzZWxlY3RlZDogW10sCiAgICAgIHRlc3RQYWNrYWdlczogW10sCiAgICAgIHRlc3RQYWNrYWdlRW5yb2xsbWVudHM6IFtdLAogICAgICBlcnJvck1lc3NhZ2U6ICIiLAogICAgICBsb2FkaW5nOiBmYWxzZQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBmaWx0ZXJlZFRlc3RQYWNrYWdlczogZnVuY3Rpb24gZmlsdGVyZWRUZXN0UGFja2FnZXMoKSB7CiAgICAgIHJldHVybiB0aGlzLmZpbHRlck91dEVucm9sbGVkUGFja2FnZXMoKTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIC8vIEdldCB0aGUgY2xpZW50IElEIGZyb20gdGhlIHJvdXRlLgogICAgdmFyIGNsaWVudElkRnJvbVJvdXRlID0gdGhpcy4kcm91dGUucGFyYW1zLmNsaWVudGlkOwogICAgdGhpcy5jbGllbnRJZCA9IGNsaWVudElkRnJvbVJvdXRlOyAvLyBJZiB0aGVyZSBhcmVuJ3QgYW55IFRlc3QgUGFja2FnZXMgaW4gdGhlIHN0YXRlIHN0b3JlLCByZXRyaWV2ZSB0aGVtIGZyb20gQVBJLgoKICAgIGlmICh0aGlzLiRzdG9yZS5zdGF0ZS50ZXN0UGFja2FnZXMubGVuZ3RoID09IDApIHsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2dldFRlc3RQYWNrYWdlcycpLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgIF90aGlzLnRlc3RQYWNrYWdlcyA9IF90aGlzLiRzdG9yZS5zdGF0ZS50ZXN0UGFja2FnZXM7CiAgICAgIH0pOwogICAgfSBlbHNlIHsKICAgICAgdGhpcy50ZXN0UGFja2FnZXMgPSB0aGlzLiRzdG9yZS5zdGF0ZS50ZXN0UGFja2FnZXM7CiAgICB9IC8vIGdldCB0aGUgVGVzdCBQYWNrYWdlcyB0aGUgQ2xpZW50IGlzIGFscmVhZHkgZW5yb2xsZWQgaW4KCgogICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2dldENsaWVudFRlc3RQYWNrYWdlRW5yb2xsbWVudHMnLCB7CiAgICAgIGNsaWVudElkOiBjbGllbnRJZEZyb21Sb3V0ZQogICAgfSkudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgIF90aGlzLnRlc3RQYWNrYWdlRW5yb2xsbWVudHMgPSBfdGhpcy4kc3RvcmUuc3RhdGUuY2xpZW50VGVzdFBhY2thZ2VFbnJvbGxtZW50OwogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBvblNlbGVjdDogZnVuY3Rpb24gb25TZWxlY3QoaXRlbXMpIHsKICAgICAgdGhpcy5zZWxlY3RlZCA9IGl0ZW1zOwogICAgfSwKICAgIHBvc3ROZXdFbnJvbGxtZW50czogZnVuY3Rpb24gcG9zdE5ld0Vucm9sbG1lbnRzKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHZhciBpbnRlcm5hbCA9IHRoaXM7CgogICAgICBpZiAoaW50ZXJuYWwuc2VsZWN0ZWQubGVuZ3RoIDwgMSkgewogICAgICAgIGludGVybmFsLmVycm9yTWVzc2FnZSA9ICJQbGVhc2Ugc2VsZWN0IGF0IGxlYXN0IG9uZSBUZXN0IFBhY2thZ2UuIjsKICAgICAgICByZXR1cm47CiAgICAgIH0gZWxzZSB7CiAgICAgICAgaW50ZXJuYWwuZXJyb3JNZXNzYWdlID0gIiI7CiAgICAgIH0KCiAgICAgIHRyeSB7CiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3Bvc3RDbGllbnRUZXN0UGFja2FnZUVucm9sbG1lbnRzJywgewogICAgICAgICAgdGVzdFBhY2thZ2VzVG9FbnJvbGw6IGludGVybmFsLnNlbGVjdGVkLAogICAgICAgICAgY2xpZW50SWQ6IGludGVybmFsLmNsaWVudElkCiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoc3RhdHVzKSB7CiAgICAgICAgICAvLyBjaGVjayBpZiBzdGF0dXMgY29kZSBpbmRpY2F0ZXMgc3VjY2VzcyBvciBmYWlsdXJlCiAgICAgICAgICBpZiAoc3RhdHVzID09IDIwMCkgewogICAgICAgICAgICAvLyBjcmVhdGUgVG9hc3QgdG8gaW5mb3JtIHVzZXIgdGhhdCBDbGllbnQgZW5yb2xsbWVudCB3YXMgc3VjY2Vzc2Z1bAogICAgICAgICAgICBfdGhpczIuJHJvb3QuJGJ2VG9hc3QudG9hc3QoJ1N1Y2Nlc3NmdWxseSBlbnJvbGxlZCBDbGllbnQgaW4gVGVzdCBQYWNrYWdlJywgewogICAgICAgICAgICAgIHRpdGxlOiAnU3VjY2VzcycsCiAgICAgICAgICAgICAgdmFyaWFudDogJ3N1Y2Nlc3MnCiAgICAgICAgICAgIH0pOyAvLyByZWRpcmVjdCB1c2VyIGJhY2sgdG8gdGhlIE1hbmFnZSBDbGllbnRzIHBhZ2UgaWYgc3VjY2VzcwoKCiAgICAgICAgICAgIHZhciBwYXRoID0gIi9jbGllbnRzLyIgKyBfdGhpczIuY2xpZW50SWQ7CgogICAgICAgICAgICBfdGhpczIuJHJvdXRlci5wdXNoKHsKICAgICAgICAgICAgICBwYXRoOiBwYXRoCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgLy8gc3RheSBhbmQgbm90ZSB0aGF0IHRoZXJlIHdhcyBhbiBlcnJvciBpZiBmYWlsdXJlCiAgICAgICAgICAgIGludGVybmFsLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgaW50ZXJuYWwuZXJyb3JNZXNzYWdlID0gIlRoZXJlIHdhcyBhIHByb2JsZW0gZW5yb2xsaW5nIHRoaXMgQ2xpZW50IGluIFRlc3QgUGFja2FnZXMuIFBsZWFzZSB0cnkgYWdhaW4uIjsKICAgICAgICAgIH0KICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgIGludGVybmFsLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgIGludGVybmFsLmVycm9yTWVzc2FnZSA9ICJUaGVyZSB3YXMgYSBwcm9ibGVtIGVucm9sbGluZyB0aGlzIENsaWVudCBpbiBUZXN0IFBhY2thZ2VzLiBQbGVhc2UgdHJ5IGFnYWluLiI7CiAgICAgICAgICBjb25zb2xlLmxvZygiRVJST1I6IiwgZXJyb3IpOwogICAgICAgIH0pOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGludGVybmFsLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICBpbnRlcm5hbC5lcnJvck1lc3NhZ2UgPSAiVGhlcmUgd2FzIGEgcHJvYmxlbSBlbnJvbGxpbmcgdGhpcyBDbGllbnQgaW4gVGVzdCBQYWNrYWdlcy4gUGxlYXNlIHRyeSBhZ2Fpbi4iOwogICAgICAgIGNvbnNvbGUubG9nKCJFUlJPUjoiLCBlcnJvcik7CiAgICAgIH0KICAgIH0sCiAgICBjYW5jZWxFbnJvbGxtZW50OiBmdW5jdGlvbiBjYW5jZWxFbnJvbGxtZW50KCkgewogICAgICAvLyByZXR1cm4gYmFjayB0byBDbGllbnQgSW5mb3JtYXRpb24gcGFnZSBpZiB1c2VyIGNsaWNrcyBDYW5jZWwKICAgICAgdmFyIHBhdGggPSAiL2NsaWVudHMvIiArIHRoaXMuY2xpZW50SWQ7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBwYXRoOiBwYXRoCiAgICAgIH0pOwogICAgfSwKICAgIGZpbHRlck91dEVucm9sbGVkUGFja2FnZXM6IGZ1bmN0aW9uIGZpbHRlck91dEVucm9sbGVkUGFja2FnZXMoKSB7CiAgICAgIHZhciBpbnRlcm5hbCA9IHRoaXM7IC8vIGlmIHRoZXJlIGFyZW4ndCBhbnkgVGVzdCBQYWNrYWdlcywgcmV0dXJuIGFuIGVtcHR5IGFycmF5LgoKICAgICAgaWYgKGludGVybmFsLnRlc3RQYWNrYWdlcyA9PSBudWxsIHx8IGludGVybmFsLnRlc3RQYWNrYWdlcy5sZW5ndGggPT0gMCkgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfSAvLyBpZiB0aGUgQ2xpZW50IGlzbid0IGVucm9sbGVkIGluIGFueSBUZXN0IFBhY2thZ2VzIHlldCwgcmV0dXJuIGFsbCBUZXN0IFBhY2thZ2VzLgoKCiAgICAgIGlmIChpbnRlcm5hbC50ZXN0UGFja2FnZUVucm9sbG1lbnRzID09IG51bGwgfHwgaW50ZXJuYWwudGVzdFBhY2thZ2VFbnJvbGxtZW50cy5sZW5ndGggPT0gMCkgewogICAgICAgIHJldHVybiBpbnRlcm5hbC50ZXN0UGFja2FnZXM7CiAgICAgIH0KCiAgICAgIHZhciByZXN1bHRzID0gaW50ZXJuYWwudGVzdFBhY2thZ2VzLmZpbHRlcihmdW5jdGlvbiAodGVzdCkgewogICAgICAgIHZhciBtYXRjaGluZ0Vucm9sbG1lbnQgPSBpbnRlcm5hbC50ZXN0UGFja2FnZUVucm9sbG1lbnRzLmZpbHRlcihmdW5jdGlvbiAoZW5yb2xsZWRUZXN0KSB7CiAgICAgICAgICBpZiAoZW5yb2xsZWRUZXN0LnRlc3RQYWNrYWdlSWQgPT0gdGVzdC50ZXN0UGFja2FnZUlkKSB7CiAgICAgICAgICAgIHJldHVybiBlbnJvbGxlZFRlc3Q7CiAgICAgICAgICB9CiAgICAgICAgfSk7CgogICAgICAgIGlmIChtYXRjaGluZ0Vucm9sbG1lbnQubGVuZ3RoID09IDApIHsKICAgICAgICAgIHJldHVybiB0ZXN0OwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHJldHVybiByZXN1bHRzOwogICAgfQogIH0KfTs="},{"version":3,"sources":["EnrollClientInTestPackages.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- Component page for Client Registration, takes fields Client Name, Email Address, and Phone Number -->\n<template>\n  <div class=\"container\">\n    \n    <!-- \"Enroll New Client\" page header -->\n    <div style=\"padding-bottom:25px; padding-top:25px\">\n        <h1>Enroll Client in Test Packages</h1>\n    </div>\n\n        <!-- Enroll Clients in Tests -->\n        <b-col cols=\"8\">\n            <md-table v-model=\"filteredTestPackages\" @md-selected=\"onSelect\">\n              <md-table-row slot=\"md-table-row\" slot-scope=\"{ item }\" md-selectable=\"multiple\">\n                <md-table-cell md-label=\"Name\" md-sort-by=\"name\">{{ item.packageName }}</md-table-cell>\n                <md-table-cell md-label=\"Number of Tests\" md-sort-by=\"numTests\">{{ item.testSettings.length }}</md-table-cell>\n              </md-table-row>\n            </md-table>\n        </b-col>\n\n        <!-- Error Message -->\n        <b-col cols=\"5\">\n            <div id=\"client-enroll-error-message\" style=\"color:red;padding-top:10px\">{{errorMessage}}</div>\n        </b-col>\n\n        <!-- Buttons -->\n        <div>\n            <b-col cols=\"5\">\n            <b-button-toolbar style=\"padding-top:10px;padding-bottom:25px\">\n                <!-- Enroll Button -->\n                <b-button-group>\n                    <b-button id=\"enroll-client\" v-show=\"!loading\" variant=\"success\" @click=\"postNewEnrollments()\">\n                        <b-icon icon=\"plus-circle\"></b-icon>\n                        Enroll\n                    </b-button>\n                </b-button-group>\n                <!-- Submitting spinner -->\n                <b-button-group>\n                    <b-button v-show=\"loading\" variant=\"success\" disabled>\n                        <b-spinner small></b-spinner>\n                        Submitting...\n                    </b-button>\n                </b-button-group>\n                <!-- Cancel -->\n                <b-button-group class=\"mx-1\">\n                    <b-button id=\"cancel-enroll-client\" variant=\"danger\" @click=\"cancelEnrollment()\" :disabled=\"loading\">\n                        Cancel\n                    </b-button>\n                </b-button-group>\n            </b-button-toolbar>\n            </b-col>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'EnrollClientInTestPackages',\n        data() {\n            return {\n                clientId: null,\n                selected: [],\n                testPackages: [],\n                testPackageEnrollments: [],\n                errorMessage: \"\",\n                loading: false,\n            }\n        },\n        computed: {\n            filteredTestPackages() {\n                return this.filterOutEnrolledPackages();\n            }\n        },\n        mounted () {\n            // Get the client ID from the route.\n            const clientIdFromRoute = this.$route.params.clientid;\n            this.clientId = clientIdFromRoute;\n            \n            // If there aren't any Test Packages in the state store, retrieve them from API.\n            if (this.$store.state.testPackages.length == 0) {\n              this.$store.dispatch('getTestPackages').then((result) => {\n                this.testPackages = this.$store.state.testPackages;\n              });\n            } else {\n                this.testPackages = this.$store.state.testPackages;\n            }\n\n            // get the Test Packages the Client is already enrolled in\n            this.$store.dispatch('getClientTestPackageEnrollments', { clientId: clientIdFromRoute }).then((result) => {\n                this.testPackageEnrollments = this.$store.state.clientTestPackageEnrollment;\n            });\n        },\n        methods: {\n            onSelect (items) {\n                this.selected = items;\n            },\n            postNewEnrollments() {\n                var internal = this;\n\n                if (internal.selected.length < 1) {\n                    internal.errorMessage = \"Please select at least one Test Package.\"\n                    return;\n                } else {\n                    internal.errorMessage = \"\";\n                }\n\n                try { \n                    this.$store.dispatch ('postClientTestPackageEnrollments', { testPackagesToEnroll: internal.selected, clientId: internal.clientId })\n                    .then((status) => {\n\n                        // check if status code indicates success or failure\n                        if (status == 200) {\n\n                            // create Toast to inform user that Client enrollment was successful\n                            this.$root.$bvToast.toast('Successfully enrolled Client in Test Package', {\n                                title: 'Success',\n                                variant: 'success',\n                            });\n\n                            // redirect user back to the Manage Clients page if success\n                            const path = \"/clients/\" + this.clientId;\n                            this.$router.push({ path });\n                        } else {\n                            // stay and note that there was an error if failure\n                            internal.loading = false;\n                            internal.errorMessage = \"There was a problem enrolling this Client in Test Packages. Please try again.\";\n                        }\n                    }).catch((error) => {\n                        internal.loading = false;\n                        internal.errorMessage = \"There was a problem enrolling this Client in Test Packages. Please try again.\";\n                        console.log(\"ERROR:\", error);\n                    }\n                    );\n                } catch (error) {\n                    internal.loading = false;\n                    internal.errorMessage = \"There was a problem enrolling this Client in Test Packages. Please try again.\";\n                    console.log(\"ERROR:\", error);\n                }\n            },\n            cancelEnrollment() {\n                // return back to Client Information page if user clicks Cancel\n                const path = \"/clients/\" + this.clientId;\n                this.$router.push({ path });\n            },\n            filterOutEnrolledPackages() {\n                var internal = this;\n\n                // if there aren't any Test Packages, return an empty array.\n                if (internal.testPackages == null || internal.testPackages.length == 0) {\n                    return [];\n                }\n\n                // if the Client isn't enrolled in any Test Packages yet, return all Test Packages.\n                if (internal.testPackageEnrollments == null || internal.testPackageEnrollments.length == 0) {\n                    return internal.testPackages;\n                }\n\n                const results = internal.testPackages.filter( function(test) {\n                    \n                    const matchingEnrollment = internal.testPackageEnrollments.filter ( function(enrolledTest) {\n                        if (enrolledTest.testPackageId == test.testPackageId) {\n                            return enrolledTest;\n                        }\n                    })\n                    \n                    if (matchingEnrollment.length == 0) {\n                        return test;\n                    }\n                });\n                return results;\n            }\n        },\n    }\n</script>"],"sourceRoot":"src/components"}]}