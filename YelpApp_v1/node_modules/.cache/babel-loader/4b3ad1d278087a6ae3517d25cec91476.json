{"remainingRequest":"/Users/brandonluy/Desktop/admin-website/node_modules/thread-loader/dist/cjs.js!/Users/brandonluy/Desktop/admin-website/node_modules/babel-loader/lib/index.js!/Users/brandonluy/Desktop/admin-website/node_modules/eslint-loader/index.js??ref--13-0!/Users/brandonluy/Desktop/admin-website/src/store.js","dependencies":[{"path":"/Users/brandonluy/Desktop/admin-website/src/store.js","mtime":1639724274000},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/cache-loader/dist/cjs.js","mtime":1648530004744},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/thread-loader/dist/cjs.js","mtime":1648530004696},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/babel-loader/lib/index.js","mtime":1648530005330},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/eslint-loader/index.js","mtime":1648530004823}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/brandonluy/Desktop/admin-website/src/store.js"],"names":["Vue","Vuex","axios","use","adminApiString","networkApiString","Store","state","account","clients","testPackages","clientTestPackageEnrollment","clientTestResults","mutations","setClients","setAccount","customer","setTestPackages","setClientTestPackageEnrollment","setClientTestResults","actions","getClients","commit","apiUri","Promise","resolve","reject","get","then","results","data","catch","error","getTestPackages","tests","getClientTestPackageEnrollments","clientId","fetch","method","json","responseJson","console","log","getClientTestResults","postClient","name","phoneNumber","email","testPackagesToEnroll","apiResponseStatus","apiClientsUri","body","JSON","stringify","response","status","successCount","customerId","omitempty","id","clientIds","push","managesPost","managesUri","managesResponse","i","length","testPackageId","testPackageEnrollmentPost","apiTestPackageEnrollmentUri","testPackageResponse","postClientTestPackageEnrollments","postCustomer","username","password","postTestPackage","packageName","testSettings","customerID","getCustomer","logOut"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\n\nVue.use(Vuex);\n\nconst adminApiString = \"http://localhost:7992/v1/api/admin\";\nconst networkApiString = \"http://localhost:7982/v1/api\";\n// 320227ee-381b-40d0-a14a-e21775fb3c91\n\n// Store for our application's state.\nexport default new Vuex.Store({\n  state: {\n    account: null,\n    clients: [],\n    testPackages: [],\n    clientTestPackageEnrollment: [],\n    clientTestResults: [],\n  },\n  mutations: {\n    setClients(state, clients) {\n      state.clients = clients;\n    },\n    setAccount(state, customer){\n      state.account = customer;\n    },\n    setTestPackages(state, testPackages) {\n      state.testPackages = testPackages;\n    },\n    setClientTestPackageEnrollment(state, clientTestPackageEnrollment) {\n      state.clientTestPackageEnrollment = clientTestPackageEnrollment;\n    },\n    setClientTestResults(state, clientTestResults) {\n      state.clientTestResults = clientTestResults;\n    },\n  },\n  actions: {\n      getClients({ commit }) {\n        \n        // do not attempt to get Clients if not logged in.\n        if (this.state.account == null) {\n          return;\n        }\n\n        // get the Clients from the Admin API and set the state for Clients\n        const apiUri = adminApiString + \"/clients/\" + this.state.account;\n        return new Promise((resolve, reject) => {\n          axios.get(apiUri).then((results) => { \n            commit('setClients', results.data.clients);\n            resolve(results);\n          }).catch((error) => {\n            reject(error);\n          });\n        });\n      },\n      getTestPackages ({ commit }) {\n        \n        // do not attempt to get Test Packages if not logged in.\n        if (this.state.account == null) {\n          return;\n        }\n        \n        // get the Test Packages from the Admin API and set the state for Test Packages\n        // TODO: Make this no longer hard-coded once login is set-up.\n        const apiUri = adminApiString + \"/\" + this.state.account + \"/configs/tests\";\n        return new Promise((resolve, reject) => {\n          axios.get(apiUri).then((results) => { \n            commit('setTestPackages', results.data.tests); \n            resolve(results);\n          }).catch((error) => {\n            reject(error);\n          });\n        });\n      },\n      getClientTestPackageEnrollments( commit, { clientId }) {\n\n        // build the uri for the request\n        const apiUri = adminApiString + \"/clients/\" + clientId + \"/tests\";\n\n        // get the Test Packages that the Client is enrolled in\n        return new Promise((resolve, reject) => {\n          fetch(apiUri, {\n            method: \"GET\",\n          }).then((results) => {\n            results.json().then((responseJson) => {\n              console.log(responseJson);\n              this.commit('setClientTestPackageEnrollment', responseJson.tests); \n              resolve(results);\n            }).catch((error) => {\n              reject(error);\n            });\n          }).catch((error) => {\n            reject(error);\n          });\n        });\n      },\n      getClientTestResults( commit, { clientId }) {\n        \n        // build the uri for the request\n        const apiUri = networkApiString + \"/clients/\" + clientId + \"/results\";\n\n        // get the test results for the Client\n        return new Promise((resolve, reject) => {\n          fetch(apiUri, {\n            method: \"GET\",\n          }).then((results) => {\n            results.json().then((responseJson) => {\n              console.log(responseJson);\n              this.commit('setClientTestResults', responseJson.results); \n              resolve(results);\n            }).catch((error) => {\n              reject(error);\n            });\n          }).catch((error) => {\n            reject(error);\n          });\n        });\n      },\n      postClient( commit, {name, phoneNumber, email, testPackagesToEnroll }) {\n\n          // do not attempt to post a Client if not logged in.\n          if (this.state.account == null) {\n            return;\n          }\n\n          const data = {name, phoneNumber, email};\n          let apiResponseStatus;\n          const apiClientsUri = adminApiString + \"/clients\";\n\n          // POST new Client to the API\n          return new Promise((resolve, reject) => {\n            fetch(apiClientsUri, {\n            method: \"POST\",\n            body: JSON.stringify(data),\n            }).then((response) => {\n              apiResponseStatus = response.status;\n              \n              // convert response into JSON\n              response.json().then((responseJson) => {\n                console.log(responseJson);\n                let successCount = 0;\n                const customerId = this.state.account;\n                const clientId = responseJson.omitempty.id;\n                console.log(\"ClientId\", clientId);\n\n                // associate the Client with a specific Customer\n                const clientIds = []\n                clientIds.push(clientId);\n                const managesPost = {customerId, clientIds};\n                const managesUri = adminApiString + \"/clients/manages\";\n\n                console.log(JSON.stringify(managesPost));\n\n                fetch(managesUri, {\n                  method: \"POST\",\n                  body: JSON.stringify(managesPost),\n                }).then((managesResponse) => {\n                  // success\n                }).catch((error) => {\n                  console.log(\"ERROR:\", error);\n                  reject(error); // failure\n                });\n\n                // for each test package enrollment, send a POST request\n                for(let i = 0; i < testPackagesToEnroll.length; i++) {\n                  let testPackageId = testPackagesToEnroll[i].testPackageId;\n                  const testPackageEnrollmentPost = {clientId, customerId, testPackageId}\n                  const apiTestPackageEnrollmentUri = adminApiString + \"/clients/enrollment\";\n                  \n                  fetch(apiTestPackageEnrollmentUri, {\n                    method: \"POST\",\n                    body: JSON.stringify(testPackageEnrollmentPost),\n                  }).then((testPackageResponse) => {\n                    successCount += 1;\n                  });\n                }\n                resolve(apiResponseStatus); \n              });              \n            }).catch((error) => {\n              console.error('ERROR:', error); \n              reject(error);\n            });\n          });\n      },\n      postClientTestPackageEnrollments( commit, { testPackagesToEnroll, clientId }) {\n        \n        // do not attempt to enroll Clients in Test Packages if not logged in\n        if (this.state.account == null) {\n          return;\n        }\n        \n        const customerId = this.state.account;\n        const apiUri = adminApiString + \"/clients/enrollment\";\n        let successCount = 0;\n\n        return new Promise((resolve, reject) => {\n          for(let i = 0; i < testPackagesToEnroll.length; i++) {\n            let testPackageId = testPackagesToEnroll[i].testPackageId;\n            const testPackageEnrollmentPost = {clientId, customerId, testPackageId}\n            \n            fetch(apiUri, {\n              method: \"POST\",\n              body: JSON.stringify(testPackageEnrollmentPost),\n            }).then((testPackageResponse) => {\n              successCount += 1;\n              if (successCount == testPackagesToEnroll.length) {\n                resolve(testPackageResponse.status);\n              }\n            }).catch((error) => {\n              reject(error);\n            });\n          }\n        });\n      },\n      postCustomer( commit, {name, username, email, password}) {\n        const data = {name, username, email, password};\n        const apiUri = adminApiString + \"/register\";\n\n        return new Promise((resolve, reject) => {\n          fetch(apiUri, {\n          method: \"POST\",\n          body: JSON.stringify(data),\n          }).then((response) => { \n            console.log(\"response from API:\", response); \n            console.log(\"response status:\", response.status);            \n            resolve(response.status); \n          }).catch((error) => {\n            console.error('ERROR:', error); \n            reject(error);\n          });\n        });\n      },\n      postTestPackage( commit, { packageName, testSettings }) {\n        \n        // do not attempt to create a Test Package if not logged in.\n        if (this.state.account == null) {\n          return;\n        }\n\n        const customerID = this.state.account;\n        const data = { customerID, packageName, testSettings };\n        const apiUri = adminApiString + \"/configs/tests\";\n\n        return new Promise((resolve, reject) => {\n          fetch(apiUri, {\n          method: \"POST\",\n          body: JSON.stringify(data),\n          }).then((response) => { \n\n            resolve(response.status); \n          }).catch((error) => {\n            console.error('ERROR:', error); \n            reject(error);\n          });\n        });\n      },\n      getCustomer(commit, {email, password}) {\n        const data = {email, password};\n        const apiUri = adminApiString + \"/login\";\n        return new Promise((resolve, reject) => {\n          fetch(apiUri, {\n          method: \"POST\",\n          body: JSON.stringify(data),\n          }).then((response) => { \n            response.json().then((responseJson) => {\n              console.log(\"response from API:\", responseJson); \n              console.log(\"response status:\", response.status);\n              if (responseJson && responseJson.customer && responseJson.customer.id) {\n                this.commit('setAccount', responseJson.customer.id);\n                resolve(response.status); \n              } else {\n                reject(response.status);\n              }\n            });\n          }).catch((error) => {\n            console.error('ERROR:', error); \n            reject(error);\n          });\n        });\n      },\n      logOut({commit}){\n        commit('setAccount', null);\n        commit('setClients', []);\n        commit('setTestPackages', []);\n      }\n   }\n});"]}]}