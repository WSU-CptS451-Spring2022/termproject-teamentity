{"remainingRequest":"/Users/brandonluy/Desktop/admin-website/node_modules/thread-loader/dist/cjs.js!/Users/brandonluy/Desktop/admin-website/node_modules/babel-loader/lib/index.js!/Users/brandonluy/Desktop/admin-website/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/brandonluy/Desktop/admin-website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brandonluy/Desktop/admin-website/src/components/TestResults.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brandonluy/Desktop/admin-website/src/components/TestResults.vue","mtime":1639724274000},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/cache-loader/dist/cjs.js","mtime":1648530004744},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/thread-loader/dist/cjs.js","mtime":1648530004696},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/babel-loader/lib/index.js","mtime":1648530005330},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/cache-loader/dist/cjs.js","mtime":1648530004744},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/vue-loader/lib/index.js","mtime":1648530005500}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["TestResults.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- Test Results page -->\n<template>\n  <div class=\"container\">\n      <!-- \"Test Package Results\" page header -->\n      <div style=\"padding-bottom:25px; padding-top:25px\">\n        <h1>Test Package Results</h1>\n      </div>\n      <!-- error message for if no information can be retrieved -->\n      <div id=\"error-message\" style=\"color:red;padding-bottom:10px\">{{ errorMessage }}</div>\n      <div>\n        <!-- Card for \"Ping Test Results\" -->\n        <b-card title=\"Ping Test Results\">\n            <!-- Message if there are no ping test results -->\n            <div id=\"ping-error-message\">{{pingTestResults.length > 0 ? \"\" : \"This Client does not have any ping test results for this test package.\"}}</div>\n            <!-- Table for ping results -->\n            <md-table v-model=\"pingTestResults\" @md-selected=\"onSelectPing\">\n                <md-table-row slot=\"md-table-row\" slot-scope=\"{ item }\" md-selectable=\"multiple\">\n                    <md-table-cell md-label=\"Test Name\" md-sort-by=\"testName\">{{ item.testName ? item.testName : \"-\" }}</md-table-cell>\n                    <md-table-cell md-label=\"Proxy IP\" md-sort-by=\"proxyIP\">{{ item.proxyIp ? item.proxyIp : \"-\" }}</md-table-cell>\n                    <md-table-cell md-label=\"Min RTT\" md-sort-by=\"minRoundTripInMs\">{{ item.minRoundTripInMs ? (item.minRoundTripInMs + \" ms\") : \"-\" }}</md-table-cell>\n                    <md-table-cell md-label=\"Avg RTT\" md-sort-by=\"avgRoundTripInMs\">{{ item.avgRoundTripInMs ? (item.avgRoundTripInMs + \" ms\") : \"-\" }}</md-table-cell>\n                    <md-table-cell md-label=\"Max RTT\" md-sort-by=\"maxRoundTripInMs\">{{ item.maxRoundTripInMs ? (item.maxRoundTripInMs + \" ms\") : \"-\" }}</md-table-cell>\n                    <md-table-cell md-label=\"Packet Loss\" md-sort-by=\"packetLoss\">{{ (item.packetLoss != null) ? (item.packetLoss + \"%\") : \"-\" }}</md-table-cell>\n                    <md-table-cell md-label=\"Timestamp\" md-sort-by=\"timestamp\">{{ item.timeResultsReceived }}</md-table-cell>\n                </md-table-row>\n            </md-table>\n            <!-- Collapsible component for ping result JSON  -->\n            <div style=\"padding-top:25px\">\n                <b-button-toolbar>\n                    <!-- \"Toggle Raw JSON (All)\" Button -->\n                    <b-button-group class=\"mx-1\">\n                        <b-button id=\"all-json-ping-button\" v-b-toggle.ping-collapse-all size=\"sm\">Toggle Raw JSON (All)</b-button>\n                    </b-button-group>\n                    <!-- \"Toggle Raw JSON (Selected)\" Button -->\n                    <b-button-group class=\"mx-1\">\n                        <b-button id=\"selected-json-ping-button\" v-b-toggle.ping-collapse-selected size=\"sm\">Toggle Raw JSON (Selected)</b-button>\n                    </b-button-group>\n                </b-button-toolbar>\n                <!-- Collapsible component that displays JSON for all ping results -->\n                <b-collapse id=\"ping-collapse-all\" class=\"mt-2\">\n                    <b-card>\n                        <p id=\"all-json-ping-text\" class=\"card-text\">{{pingTestResultsJson}}</p>\n                    </b-card>\n                </b-collapse>\n                <!-- Collapsible component that displays JSON for selected ping results -->\n                <b-collapse id=\"ping-collapse-selected\" class=\"mt-2\">\n                    <b-card>\n                        <p id=\"selected-json-ping-text\" class=\"card-text\">{{pingTestResultsSelectedJson}}</p>\n                    </b-card>\n                </b-collapse>\n            </div>\n        </b-card>\n        <div style=\"padding-top:10px\"></div>\n        <!-- Card for \"Traceroute Test Results\" -->\n        <b-card title=\"Traceroute Test Results\">\n            <!-- Message if there are no traceroute test results -->\n            <div id=\"traceroute-error-message\">{{tracerouteTestResults.length > 0 ? \"\" : \"This Client does not have any traceroute test results for this test package.\"}}</div>\n            <md-table v-model=\"tracerouteTestResults\" @md-selected=\"onSelectTraceroute\">\n                <md-table-row slot=\"md-table-row\" slot-scope=\"{ item }\" md-selectable=\"multiple\">\n                    <md-table-cell md-label=\"Test Name\" md-sort-by=\"testName\">{{ item.testName ? item.testName : \"-\" }}</md-table-cell>\n                    <md-table-cell md-label=\"Proxy IP\" md-sort-by=\"proxyIP\">{{ item.proxyIp ? item.proxyIp : \"-\" }}</md-table-cell>\n                    <md-table-cell md-label=\"Timestamp\" md-sort-by=\"timestamp\">{{ item.timeResultsReceived }}</md-table-cell>\n                    <md-table-cell><b-button v-b-toggle.traceroute-hops-collapse size=\"sm\" variant=\"outline-primary\" @click=\"onViewHopsButtonClick(item.hops)\">View Hops</b-button></md-table-cell>\n                </md-table-row>\n            </md-table>\n            <!-- Collapsible components for traceroute  -->\n            <div style=\"padding-top:25px\">\n                <b-button-toolbar>\n                    <!-- \"Toggle Raw JSON (All)\" Button -->\n                    <b-button-group class=\"mx-1\">\n                        <b-button id=\"all-json-traceroute-button\" v-b-toggle.traceroute-collapse-all size=\"sm\">Toggle Raw JSON (All)</b-button>\n                    </b-button-group>\n                    <!-- \"Toggle Raw JSON (Selected)\" Button -->\n                    <b-button-group class=\"mx-1\">\n                        <b-button id=\"selected-json-traceroute-button\" v-b-toggle.traceroute-collapse-selected size=\"sm\">Toggle Raw JSON (Selected)</b-button>\n                    </b-button-group>\n                </b-button-toolbar>\n                <!-- Collapsible component that displays JSON for all traceroute results -->\n                <b-collapse id=\"traceroute-collapse-all\" class=\"mt-2\">\n                    <b-card>\n                        <p id=\"all-json-traceroute-text\" class=\"card-text\">{{tracerouteTestResultsJson}}</p>\n                    </b-card>\n                </b-collapse>\n                <!-- Collapsible component that displays JSON for selected traceroute results -->\n                <b-collapse id=\"traceroute-collapse-selected\" class=\"mt-2\">\n                    <b-card>\n                        <p id=\"selected-json-traceroute-text\" class=\"card-text\">{{tracerouteTestResultsSelectedJson}}</p>\n                    </b-card>\n                </b-collapse>\n                <!-- Collapsible component for traceroute hops table  -->\n                <b-collapse id=\"traceroute-hops-collapse\" class=\"mt-2\">\n                    <b-card>\n                        <div>{{currentHops.length > 0 ? \"\" : \"This Client does not have any traceroute hop results for this test.\"}}</div>\n                        <md-table v-model=\"currentHops\">\n                            <md-table-row slot=\"md-table-row\" slot-scope=\"{ item }\">\n                                <md-table-cell md-label=\"Hop\" md-sort-by=\"hop\">{{ (item.hopNumber != null) ? item.hopNumber : \"-\" }}</md-table-cell>\n                                <md-table-cell md-label=\"IP Address\" md-sort-by=\"ipAddress\">{{ item.hopIpAddress ? item.hopIpAddress : \"-\" }}</md-table-cell>\n                                <md-table-cell md-label=\"RTT 1\" md-sort-by=\"rtt1\">{{ item.roundTripTimeInMs1 ? (item.roundTripTimeInMs1 + \" ms\") : \"*\" }}</md-table-cell>\n                                <md-table-cell md-label=\"RTT 2\" md-sort-by=\"rtt2\">{{ item.roundTripTimeInMs2 ? (item.roundTripTimeInMs2 + \" ms\") : \"*\" }}</md-table-cell>\n                                <md-table-cell md-label=\"RTT 3\" md-sort-by=\"rtt3\">{{ item.roundTripTimeInMs3 ? (item.roundTripTimeInMs3 + \" ms\") : \"*\" }}</md-table-cell>\n                            </md-table-row>\n                        </md-table>\n                    </b-card>\n                </b-collapse>\n            </div>\n        </b-card>\n        <div style=\"padding-top:10px\"></div>\n        <!-- Card for \"cURL Test Results\" -->\n        <b-card title=\"cURL Test Results\">\n            <!-- Message if there are no curl test results -->\n            <div id=\"curl-error-message\">{{curlTestResults.length > 0 ? \"\" : \"This Client does not have any curl test results for this test package.\"}}</div>\n            <md-table v-model=\"curlTestResults\" @md-selected=\"onSelectCurl\">\n                <md-table-row slot=\"md-table-row\" slot-scope=\"{ item }\" md-selectable=\"multiple\">\n                    <md-table-cell md-label=\"Test Name\" md-sort-by=\"testName\">{{ item.testName ? item.testName : \"-\" }}</md-table-cell>\n                    <md-table-cell md-label=\"Proxy IP\" md-sort-by=\"proxyIP\">{{ item.proxyIp ? item.proxyIp : \"-\" }}</md-table-cell>\n                    <md-table-cell md-label=\"Status Code\" md-sort-by=\"statusCode\">{{ item.statusCode ? item.statusCode : \"-\" }}</md-table-cell>\n                    <md-table-cell md-label=\"Cellular\" md-sort-by=\"cellular\">{{ (item.cellular != null) ? item.cellular : \"-\" }}</md-table-cell>\n                    <md-table-cell md-label=\"Timestamp\" md-sort-by=\"timestamp\">{{ item.timeResultsReceived }}</md-table-cell>\n                </md-table-row>\n            </md-table>\n            <!-- Collapsible components for curl result JSON  -->\n            <div style=\"padding-top:25px\">\n                <b-button-toolbar>\n                    <!-- \"Toggle Raw JSON (All)\" Button -->\n                    <b-button-group class=\"mx-1\">\n                        <b-button id=\"all-json-curl-button\" v-b-toggle.curl-collapse-all size=\"sm\">Toggle Raw JSON (All)</b-button>\n                    </b-button-group>\n                    <!-- \"Toggle Raw JSON (Selected)\" Button -->\n                    <b-button-group class=\"mx-1\">\n                        <b-button id=\"selected-json-curl-button\" v-b-toggle.curl-collapse-selected size=\"sm\">Toggle Raw JSON (Selected)</b-button>\n                    </b-button-group>\n                </b-button-toolbar>\n                <!-- Collapsible component that displays JSON for all curl results -->\n                <b-collapse id=\"curl-collapse-all\" class=\"mt-2\">\n                    <b-card>\n                        <p id=\"all-json-curl-text\" class=\"card-text\">{{curlTestResultsJson}}</p>\n                    </b-card>\n                </b-collapse>\n                <!-- Collapsible component that displays JSON for selected curl results -->\n                <b-collapse id=\"curl-collapse-selected\" class=\"mt-2\">\n                    <b-card>\n                        <p id=\"selected-json-curl-text\" class=\"card-text\">{{curlTestResultsSelectedJson}}</p>\n                    </b-card>\n                </b-collapse>\n            </div>\n        </b-card>\n        <div style=\"padding-bottom:50px\"></div>\n      </div>\n  </div>\n</template>\n\n<script>\n\n\nexport default {\n    name: 'TestResults',\n    components: {\n\n    },\n    data() {\n        return {\n            errorMessage: \"\",\n            testPackages: [],\n            testResults: [],\n            pingTestResults: [],\n            pingTestResultsJson: \"[]\",\n            pingTestResultsSelectedJson: \"[]\",\n            showPingTestResultsJson: false,\n            tracerouteTestResults: [],\n            tracerouteTestResultsJson: \"[]\",\n            tracerouteTestResultsSelectedJson: \"[]\",\n            showTracerouteTestResultsJson: false,\n            curlTestResults: [],\n            curlTestResultsJson: \"[]\",\n            curlTestResultsSelectedJson: \"[]\",\n            showCurlTestResultsJson: false,\n            currentHops: [],\n        }\n    },\n    mounted () {\n        // Get the client ID from the route.\n        const clientIdFromRoute = this.$route.params.clientid;\n        const testPackageIdFromRoute = this.$route.params.testpackageid;\n\n        // get the information about the test packages the Client is enrolled in\n        this.$store.dispatch('getTestPackages').then((result) => {\n            this.testPackages = this.$store.state.testPackages;\n\n            // make a GET request to get the Test Results for the Client\n            this.$store.dispatch('getClientTestResults', { clientId: clientIdFromRoute }).then((result) => {\n                this.testResults = this.$store.state.clientTestResults;\n                this.processTestResults(testPackageIdFromRoute);\n\n                // if there are no results, display an error\n                if (this.pingTestResults.length == 0 && this.tracerouteTestResults.length == 0 && this.curlTestResults.length == 0) {\n                    this.errorMessage = \"Error: Problem loading or result does not exist.\";\n                }\n            });\n        });\n    },\n    props: {\n\n    },\n    computed: {\n\n    },\n    methods: {\n        processTestResults(testPackageId) {\n            \n            let testPackageInformation;\n\n            // retrieve the test package associated with these results\n            let currentTestPackage = this.testPackages.filter( function(testPackage) {\n                if (testPackage.testPackageId == testPackageId) {\n                    return testPackage;\n                }\n            });\n\n            // get the first test package that was found with this id (there should only be one)\n            currentTestPackage = currentTestPackage[0];\n            \n            // if there are no results, return\n            if (this.testResults == null || this.testResults.length == 0) {\n                return;\n            }\n\n            // retrieve the ping results for this Test Package\n            if (this.testResults.ping && this.testResults.ping.length > 0) {\n                for (let i = 0; i < this.testResults.ping.length; i++) {\n                    if (this.testResults.ping[i].testPackageId == testPackageId) {\n                        \n                        // get the name of the test from the test package\n                        if (currentTestPackage && currentTestPackage.testSettings.length > 0) {\n                            for (let j = 0; j < currentTestPackage.testSettings.length; j++) {\n                                if (currentTestPackage.testSettings[j].testId == this.testResults.ping[i].requestedTestId) {\n                                    this.testResults.ping[i].testName = currentTestPackage.testSettings[j].testName;\n                                    break;\n                                }\n                            }\n                        }\n                        \n                        this.pingTestResults.push(this.testResults.ping[i]);\n                    }\n                }\n                \n                // convert ping results to JSON for \"Toggle Raw JSON\" feature\n                this.pingTestResultsJson = JSON.stringify(this.pingTestResults);\n            }\n\n            // retrieve the traceroute results for this Test Package\n            if (this.testResults.traceRoute && this.testResults.traceRoute.length > 0) {\n                for (let i = 0; i < this.testResults.traceRoute.length; i++) {\n                    if (this.testResults.traceRoute[i].testPackageId == testPackageId) {\n\n                        // get the name of the test from the test package\n                        if (currentTestPackage && currentTestPackage.testSettings.length > 0) {\n                            for (let j = 0; j < currentTestPackage.testSettings.length; j++) {\n                                if (currentTestPackage.testSettings[j].testId == this.testResults.traceRoute[i].requestedTestId) {\n                                    this.testResults.traceRoute[i].testName = currentTestPackage.testSettings[j].testName;\n                                    break;\n                                }\n                            }\n                        }\n\n                        this.tracerouteTestResults.push(this.testResults.traceRoute[i]);\n                    }\n                }\n\n                // convert traceroute results to JSON for \"Toggle Raw JSON\" feature\n                this.tracerouteTestResultsJson = JSON.stringify(this.tracerouteTestResults);\n            }\n\n            // retrieve the curl results for this Test Package\n            if (this.testResults.curl && this.testResults.curl.length > 0) {\n                for (let i = 0; i < this.testResults.curl.length; i++) {\n                    if (this.testResults.curl[i].testPackageId == testPackageId) {\n\n                        // get the name of the test from the test package\n                        if (currentTestPackage && currentTestPackage.testSettings.length > 0) {\n                            for (let j = 0; j < currentTestPackage.testSettings.length; j++) {\n                                if (currentTestPackage.testSettings[j].testId == this.testResults.curl[i].requestedTestId) {\n                                    this.testResults.curl[i].testName = currentTestPackage.testSettings[j].testName;\n                                    break;\n                                }\n                            }\n                        }\n\n                        this.curlTestResults.push(this.testResults.curl[i]);\n                    }\n                }\n\n                // convert curl results to JSON for \"Toggle Raw JSON\" feature\n                this.curlTestResultsJson = JSON.stringify(this.curlTestResults);\n            }\n        },\n        toggleShowJson(test) {\n            // toggles showing the JSON from true to false and vice versa\n            if (test == \"ping\") {\n                this.showPingTestResultsJson ? this.showPingTestResultsJson = false : this.showPingTestResultsJson = true;\n            } else if (test == \"traceroute\") {\n                this.showTracerouteTestResultsJson ? this.showTracerouteTestResultsJson = false : this.showTracerouteTestResultsJson = true;\n            } else if (test == \"curl\") {\n                this.showCurlTestResultsJson ? this.showCurlTestResultsJson = false : this.showCurlTestResultsJson = true;\n            }\n        },\n        onViewHopsButtonClick(hops) {\n            this.currentHops = hops;\n        },\n        onSelectPing(items) {\n            // Set the JSON for selected ping tests\n            this.pingTestResultsSelectedJson = JSON.stringify(items);\n        },\n        onSelectTraceroute(items) {\n            // Set the JSON for selected traceroute tests\n            this.tracerouteTestResultsSelectedJson = JSON.stringify(items);\n        },\n        onSelectCurl(items) {\n            // Set the JSON for selected curl tests\n            this.curlTestResultsSelectedJson = JSON.stringify(items);\n        },\n    }\n}\n\n\n</script>\n"],"sourceRoot":"src/components"}]}