{"remainingRequest":"/Users/brandonluy/Desktop/admin-website/node_modules/thread-loader/dist/cjs.js!/Users/brandonluy/Desktop/admin-website/node_modules/babel-loader/lib/index.js!/Users/brandonluy/Desktop/admin-website/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/brandonluy/Desktop/admin-website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brandonluy/Desktop/admin-website/src/components/CreateTestPackage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brandonluy/Desktop/admin-website/src/components/CreateTestPackage.vue","mtime":1639724274000},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/cache-loader/dist/cjs.js","mtime":1648530004744},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/thread-loader/dist/cjs.js","mtime":1648530004696},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/babel-loader/lib/index.js","mtime":1648530005330},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/cache-loader/dist/cjs.js","mtime":1648530004744},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/vue-loader/lib/index.js","mtime":1648530005500}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["CreateTestPackage.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- Component page for Test Package creation -->\n<template>\n  <div class=\"container\">\n    \n    <!-- \"Create New Test Package\" page header -->\n    <div style=\"padding-bottom:25px; padding-top:25px\">\n        <h1>Create New Test Package</h1>\n    </div>\n\n        <!-- Form Components -->\n        <b-col cols=\"8\">\n            <!-- Test Package Name -->\n            <div class=\"form-group\" style=\"padding-bottom:10px\">\n                <label>Test Package Name</label>\n                <b-form-input id=\"test-package-name-input\" type=\"text\" class=\"form-control form-control-md\" v-model=\"testPackageName\" aria-describedby=\"test-package-name-feedback\" :state=\"testPackageNameValid\" @input=\"validateTestPackageName()\"/>\n                <b-form-invalid-feedback id=\"test-package-name-feedback\">{{ testPackageNameFeedback }}</b-form-invalid-feedback>\n            </div>\n        </b-col>\n\n        <!-- Define Tests for Test Package -->\n        <b-col cols=\"8\">\n            <div>\n                <h4>Define Tests for Test Package</h4>\n            </div>\n            <b-card>\n                <!-- Test Type form select -->\n                <div class=\"form-group\">\n                    <label>Test Type</label>\n                    <b-form-select id=\"test-type-select\" v-model=\"selectedTestType\" :options=\"testTypeOptions\" :state=\"testTypeValid\" @change=\"validateTestType()\"></b-form-select>\n                </div>\n                <!-- Test Name input -->\n                <div class=\"form-group\">\n                    <label>Test Name</label>\n                    <b-form-input id=\"test-name-input\" type=\"text\" class=\"form-control form-control-md\" v-model=\"testName\" aria-describedby=\"test-name-feedback\" :state=\"testNameValid\" @input=\"validateTestName()\"/>\n                    <b-form-invalid-feedback id=\"test-name-feedback\">{{ testNameFeedback }}</b-form-invalid-feedback>\n                </div>\n                <!-- Destination IP input -->\n                <div class=\"form-group\">\n                    <label>{{testTypeDestinationText}}</label>\n                    <b-form-input id=\"ip-address-input\" type=\"text\" class=\"form-control form-control-md\" v-model=\"ipAddress\" aria-describedby=\"ip-address-feedback\" :state=\"ipAddressValid\" @input=\"validateIpAddress\"/>\n                    <b-form-invalid-feedback id=\"ip-address-feedback\">{{ ipAddressFeedback }}</b-form-invalid-feedback>\n                </div>\n                <div id=\"test-error-message\" style=\"color:red\">{{ defineTestErrorMessage }}</div>\n                <b-button-toolbar style=\"padding-top:5px\">\n                    <!-- Add Button -->\n                    <b-button-group>\n                        <b-button id=\"add-button\" variant=\"outline-success\" size=\"sm\" @click=\"onAddButtonClick()\">\n                            <b-icon icon=\"plus-circle\"></b-icon>\n                            Add\n                        </b-button>\n                    </b-button-group>\n                    <!-- Clear Button -->\n                    <b-button-group class=\"mx-1\" size=\"sm\">\n                        <b-button id=\"clear-button\" variant=\"outline-danger\" @click=\"onClearButtonClick()\">\n                            Clear\n                        </b-button>\n                    </b-button-group>\n                </b-button-toolbar>\n            </b-card>\n        </b-col>\n\n        <!-- Tests in this Test Package table -->\n        <b-col cols=\"8\">\n            <div style=\"padding-top:25px\">\n                <h4>Tests in this Test Package</h4>\n            </div>\n            <md-table v-model=\"definedTests\">\n                <md-table-row slot=\"md-table-row\" slot-scope=\"{ item }\">\n                    <md-table-cell md-label=\"Name\" md-sort-by=\"name\">{{ item.testName }}</md-table-cell>\n                    <md-table-cell md-label=\"Test Type\" md-sort-by=\"testType\">{{ item.testType }}</md-table-cell>\n                    <md-table-cell md-label=\"Destination\" md-sort-by=\"destination\">{{ item.proxyIP }}</md-table-cell>\n                    <md-table-cell><b-button size=\"sm\" variant=\"outline-danger\" @click=\"onRemoveButtonClick(item.testType, item.testName, item.proxyIP)\"><b-icon icon=\"x\"></b-icon> Remove</b-button></md-table-cell>\n                </md-table-row>\n            </md-table>\n        </b-col>\n\n        <!-- Buttons -->\n        <div>\n            <b-col cols=\"8\">\n            <!-- Error Message -->\n            <div id=\"test-package-error-message\" style=\"color:red;padding-top:10px\">{{ errorMessage }}</div>\n            <b-button-toolbar style=\"padding-top:10px;padding-bottom:50px\">\n                <!-- Enroll Button -->\n                <b-button-group>\n                    <b-button id=\"create-test-package\" v-show=\"!loading\" variant=\"success\" @click=\"postNewTestPackage()\">\n                        <b-icon icon=\"plus-circle\"></b-icon>\n                        Create Test Package\n                    </b-button>\n                </b-button-group>\n                <!-- Submitting spinner -->\n                <b-button-group>\n                    <b-button v-show=\"loading\" variant=\"success\" disabled>\n                        <b-spinner small></b-spinner>\n                        Submitting...\n                    </b-button>\n                </b-button-group>\n                <!-- Cancel -->\n                <b-button-group class=\"mx-1\">\n                    <b-button id=\"cancel-create-test-package\" variant=\"danger\" @click=\"cancelCreateTestPackage()\" :disabled=\"loading\">\n                        Cancel\n                    </b-button>\n                </b-button-group>\n            </b-button-toolbar>\n            </b-col>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'CreateTestPackage',\n        data() {\n            return {\n                testPackageName: \"\",\n                testName: \"\",\n                ipAddress: \"\",\n                loading: false,\n                errorMessage: \"\",\n                defineTestErrorMessage: \"\",\n                testPackageNameValid: null,\n                testPackageNameFeedback: \"\",\n                testTypeValid: null,\n                testNameValid: null,\n                testNameFeedback: \"\",\n                ipAddressValid: null,\n                ipAddressFeedback: \"\",\n                selectedTestType: null,\n                testTypeOptions: [\n                    { value: null, text: \"Please select a test type.\" },\n                    { value: \"ping\", text: \"ping\" },\n                    { value: \"traceroute\", text: \"traceroute\" },\n                    { value: \"cURL\", text: \"cURL\" },\n                ],\n                testTypeDestinationText: \"Destination IP Address\",\n                definedTests: [\n                    { testType: \"ping\", testName: \"Ping google.com\", proxyIP: \"142.251.33.110\" },\n                    { testType: \"ping\", testName: \"Ping f5.com\", proxyIP: \"107.162.162.40\" },\n                ],\n            }\n        },\n        methods: {\n            postNewTestPackage() {\n                var internal = this;\n                this.validateTestPackageName();\n\n                // if the input is valid, call the postClient mutation method.\n                if (this.testPackageNameValid) {\n                    \n                    internal.loading = true;\n                    internal.errorMessage = \"\"; // reset error message if there was one\n                    \n                    try { \n                        this.$store.dispatch ('postTestPackage', { packageName: internal.testPackageName, testSettings: internal.definedTests })\n                        .then((status) => {\n                            // check if status code indicates success or failure\n                            if (status == 200) {\n                                // create Toast to inform user that Test Package creation was successful\n                                this.$root.$bvToast.toast('Test Package \\\"' + internal.testPackageName + '\\\" was successfully created.', {\n                                    title: 'Success',\n                                    variant: 'success',\n                                });\n                                // redirect user back to the Manage Test Package page if success\n                                this.$router.push({ path: '/testpackages' });\n                            } else if (status == 500) {\n                                // there was a bad input parameter\n                                this.$root.$bvToast.toast('One or more test in \\\"' + internal.testPackageName + '\\\" could not be created due to an invalid value.', {\n                                    title: 'Warning',\n                                    variant: 'warning',\n                                });\n                                // redirect user back to the Manage Test Package page\n                                this.$router.push({ path: '/testpackages' });\n                            } else {\n                                // there was some other failure\n                                internal.loading = false;\n                                internal.errorMessage = \"There was a problem creating this Test Package. Please try again.\";\n                            }\n                        }).catch((error) => {\n                            internal.loading = false;\n                            internal.errorMessage = \"There was a problem enrolling this Test Package. Please try again.\";\n                            console.log(\"ERROR:\", error);\n                        }\n                        );\n                    } catch (error) {\n                        internal.loading = false;\n                        internal.errorMessage = \"There was a problem enrolling this Test Package. Please try again.\";\n                        console.log(\"ERROR:\", error);\n                    }\n                } else {\n                    // if there is invalid/missing input in form, indicate this to the user.\n                    internal.errorMessage = \"Please fill out the form as indicated above.\"\n                }\n            },\n            cancelCreateTestPackage() {\n                // return back to Manage Test Package page if user clicks Cancel\n                this.$router.push({ path: '/testpackages' });\n            },\n            validateTestPackageName() {\n                // validate that Test Package Name is at least 1 character and less than or equal to 100 characters\n                if (this.testPackageName.length >= 1 && this.testPackageName.length <= 100) {\n                    this.testPackageNameValid = true;\n                    this.testPackageNameFeedback = \"\";\n                } else if (this.testPackageName.length == 0) {\n                    this.testPackageNameValid = false;\n                    this.testPackageNameFeedback = \"Please enter a name for the Test Package.\";\n                } else {\n                    this.testPackageNameValid = false;\n                    this.testPackageNameFeedback = \"Test Package names are limited to 100 characters in length.\";\n                }\n            },\n            validateTestType() {\n                // validate that a Test Type is selected.\n                if (this.selectedTestType != null) {\n                    this.testTypeValid = true;\n                    \n                    // TODO: switch back to using this\n                    // switch the text for the destination field if needed\n                    /*if (this.selectedTestType == \"cURL\") {\n                        this.testTypeDestinationText = \"Endpoint\";\n                    } else {\n                        this.testTypeDestinationText = \"Destination IP Address\";\n                    }*/\n\n                } else {\n                    this.testTypeValid = false;\n                }\n            },\n            validateTestName() {\n                // validate that test name is at least 1 character and less than or equal to 100 characters\n                if (this.testName.length >= 1 && this.testName.length <= 100) {\n                    this.testNameValid = true;\n                    this.testNameFeedback = \"\";\n                } else if (this.testName.length == 0) {\n                    this.testNameValid = false;\n                    this.testNameFeedback = \"Please enter a name for the test.\";\n                } else {\n                    this.testNameValid = false;\n                    this.testNameFeedback = \"Test names are limited to 100 characters in length.\";\n                }\n            },\n            validateIpAddress() {\n                // validate that destination IP address is IPv4 or IPv6 using regex.\n                // regex from: https://www.geeksforgeeks.org/how-to-validate-an-ip-address-using-regex/\n                const ipv4 = new RegExp(\"(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\");\n                const ipv6 = new RegExp(\"((([0-9a-fA-F]){1,4})\\\\:){7}([0-9a-fA-F]){1,4}\");\n                \n                const isIpv4 = ipv4.test(this.ipAddress);\n                const isIpv6 = ipv6.test(this.ipAddress);\n\n                if ((isIpv4 && this.ipAddress.length <= 15) || (isIpv6 && this.ipAddress.length <= 45)) {\n                    this.ipAddressValid = true;\n                    this.ipAddressFeedback = \"\";\n                } else {\n                    this.ipAddressValid = false;\n                    this.ipAddressFeedback = \"Please enter a valid IP address.\";\n                } \n            },\n            onClearButtonClick() {\n                // clear out input, valid states, and current feedback.\n                this.selectedTestType = null;\n                this.testName = \"\";\n                this.ipAddress = \"\";\n                this.testNameValid = null;\n                this.ipAddressValid = null;\n                this.testTypeValid= null;\n                this.testNameFeedback = \"\";\n                this.ipAddressFeedback = \"\";\n            },\n            onAddButtonClick() {\n                this.defineTestErrorMessage = \"\";\n                \n                // make sure that all inputs are valid.\n                this.validateTestType();\n                this.validateTestName();\n                this.validateIpAddress();\n\n                // if all the inputs are valid, add the test to the list of tests for this Test Package.\n                if (this.testTypeValid && this.testNameValid && this.ipAddressValid) {\n                    const newTest = { testType: this.selectedTestType, testName: this.testName, proxyIP: this.ipAddress };\n                    this.definedTests.push(newTest);\n                    this.onClearButtonClick(); // clear out the input after it has been added to the list.\n                } else {\n                    this.defineTestErrorMessage = \"Please fill out the form as indicated above.\"\n                }\n                \n            },\n            onRemoveButtonClick(testType, testName, ipAddress) {\n                let done = false;\n\n                // filter out the first result that matches what the user wants to remove.\n                const results = this.definedTests.filter( function(test) {\n                    if ((!done) && (test.testType == testType) && (test.testName == testName) && (test.proxyIP == ipAddress)) {\n                        done = true;\n                    } else {\n                        return test;\n                    }\n                })\n\n                this.definedTests = results;\n            },\n        },\n    }\n</script>"],"sourceRoot":"src/components"}]}