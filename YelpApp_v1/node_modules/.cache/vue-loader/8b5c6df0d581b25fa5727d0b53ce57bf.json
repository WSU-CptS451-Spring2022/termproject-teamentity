{"remainingRequest":"/Users/brandonluy/Desktop/admin-website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brandonluy/Desktop/admin-website/src/components/TestPackageInformation.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brandonluy/Desktop/admin-website/src/components/TestPackageInformation.vue","mtime":1639724274000},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/cache-loader/dist/cjs.js","mtime":1648530004744},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/thread-loader/dist/cjs.js","mtime":1648530004696},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/babel-loader/lib/index.js","mtime":1648530005330},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/cache-loader/dist/cjs.js","mtime":1648530004744},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/vue-loader/lib/index.js","mtime":1648530005500}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdUZXN0UGFja2FnZUluZm9ybWF0aW9uJywKICAgIGNvbXBvbmVudHM6IHsKICAgIH0sCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGVycm9yTWVzc2FnZTogIiIsCiAgICAgICAgICAgIHRlc3RQYWNrYWdlSWQ6ICIiLAogICAgICAgICAgICB0ZXN0UGFja2FnZU5hbWU6ICIiLAogICAgICAgICAgICB0ZXN0UGFja2FnZVRlc3RzOiBbXSwKICAgICAgICB9CiAgICB9LAogICAgbW91bnRlZCAoKSB7CiAgICAgICAgLy8gSWYgdGhlcmUgYXJlbid0IGFueSBDbGllbnRzLCBjYWxsIGdldENsaWVudHMoKSBpbiBjYXNlIHRoZSB1c2VyIHdlbnQgZGlyZWN0bHkgdG8gdGhpcwogICAgICAgIC8vIGxpbmsgYW5kIHRoZSBsaXN0IG9mIENsaWVudHMgaGFzIG5vdCBiZWVuIHJldHJpZXZlZCB5ZXQuCiAgICAgICAgaWYgKHRoaXMuJHN0b3JlLnN0YXRlLnRlc3RQYWNrYWdlcy5sZW5ndGggPT0gMCkgewogICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZ2V0VGVzdFBhY2thZ2VzJykudGhlbigocmVzdWx0KSA9PiB7CiAgICAgICAgICAgICAgdGhpcy5zZXREYXRhRnJvbVN0YXRlKCkKICAgICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuc2V0RGF0YUZyb21TdGF0ZSgpCiAgICAgICAgfQogICAgfSwKICAgIHByb3BzOiB7CiAgICB9LAogICAgbWV0aG9kczogewogICAgICBzZXREYXRhRnJvbVN0YXRlKCkgewogICAgICAgIGNvbnN0IHRlc3RQYWNrYWdlSWRGcm9tUm91dGUgPSB0aGlzLiRyb3V0ZS5wYXJhbXMudGVzdHBhY2thZ2VpZDsKCiAgICAgICAgLy8gR2V0IHRoZSBUZXN0IFBhY2thZ2UgYnkgSUQgZnJvbSB0aGUgbGlzdCBvZiBUZXN0IFBhY2thZ2VzIHN0b3JlZCBpbiBzdGF0ZS4KICAgICAgICBjb25zdCByZXN1bHRzID0gdGhpcy4kc3RvcmUuc3RhdGUudGVzdFBhY2thZ2VzLmZpbHRlciggZnVuY3Rpb24odGVzdFBhY2thZ2UpIHsKICAgICAgICAgICAgaWYgKHRlc3RQYWNrYWdlLnRlc3RQYWNrYWdlSWQgPT0gdGVzdFBhY2thZ2VJZEZyb21Sb3V0ZSkgewogICAgICAgICAgICAgICAgcmV0dXJuIHRlc3RQYWNrYWdlOwogICAgICAgICAgICB9CiAgICAgICAgfSk7CgogICAgICAgIC8vIEdldCB0aGUgVGVzdCBQYWNrYWdlcydzIGluZm9ybWF0aW9uIHRvIGRpc3BsYXkgZnJvbSB0aGUgcmVzdWx0cyBhYm92ZS4KICAgICAgICAvLyBJZiB0aGVyZSB3ZXJlIG5vIHJlc3VsdHMsIGRpc3BsYXkgYW4gZXJyb3IuCiAgICAgICAgaWYgKHJlc3VsdHMgJiYgcmVzdWx0cy5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgIHRoaXMudGVzdFBhY2thZ2VJZCA9IHJlc3VsdHNbMF0udGVzdFBhY2thZ2VJZDsKICAgICAgICAgICAgdGhpcy50ZXN0UGFja2FnZU5hbWUgPSByZXN1bHRzWzBdLnBhY2thZ2VOYW1lOwogICAgICAgICAgICB0aGlzLnRlc3RQYWNrYWdlVGVzdHMgPSByZXN1bHRzWzBdLnRlc3RTZXR0aW5nczsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGlzLmVycm9yTWVzc2FnZSA9ICJFcnJvcjogVGVzdCBQYWNrYWdlIGRvZXMgbm90IGV4aXN0LiIKICAgICAgICB9CiAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["TestPackageInformation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TestPackageInformation.vue","sourceRoot":"src/components","sourcesContent":["<!-- Displays information about Test Package -->\n<template>\n  <div class=\"container\">\n      <!-- \"Test Package Information\" page header -->\n      <div style=\"padding-bottom:25px; padding-top:25px\">\n        <h1>Test Package Information</h1>\n      </div>\n      <div style=\"color=red\">{{ errorMessage }}</div>\n      <div>\n        <b-card>\n          <b-card-text>\n              <strong>Test Package Name:</strong> {{ testPackageName }} <br>\n              <strong>Number of Tests:</strong> {{ testPackageTests.length }}\n          </b-card-text>\n        </b-card>\n      </div>\n      <div style=\"padding-top:25px\">\n          <h5>Tests in this Test Package</h5>\n      </div>\n      <md-table v-model=\"testPackageTests\">\n        <md-table-row slot=\"md-table-row\" slot-scope=\"{ item }\">\n          <md-table-cell md-label=\"Name\" md-sort-by=\"name\">{{ item.testName }}</md-table-cell>\n          <md-table-cell md-label=\"Test Type\" md-sort-by=\"testType\">{{ item.testType }}</md-table-cell>\n          <md-table-cell md-label=\"Destination\" md-sort-by=\"destination\">{{ item.proxyIp }}</md-table-cell>\n        </md-table-row>\n      </md-table>\n  </div>\n</template>\n\n<script>\nexport default {\n    name: 'TestPackageInformation',\n    components: {\n    },\n    data() {\n        return {\n            errorMessage: \"\",\n            testPackageId: \"\",\n            testPackageName: \"\",\n            testPackageTests: [],\n        }\n    },\n    mounted () {\n        // If there aren't any Clients, call getClients() in case the user went directly to this\n        // link and the list of Clients has not been retrieved yet.\n        if (this.$store.state.testPackages.length == 0) {\n            this.$store.dispatch('getTestPackages').then((result) => {\n              this.setDataFromState()\n            });\n        } else {\n          this.setDataFromState()\n        }\n    },\n    props: {\n    },\n    methods: {\n      setDataFromState() {\n        const testPackageIdFromRoute = this.$route.params.testpackageid;\n\n        // Get the Test Package by ID from the list of Test Packages stored in state.\n        const results = this.$store.state.testPackages.filter( function(testPackage) {\n            if (testPackage.testPackageId == testPackageIdFromRoute) {\n                return testPackage;\n            }\n        });\n\n        // Get the Test Packages's information to display from the results above.\n        // If there were no results, display an error.\n        if (results && results.length > 0) {\n            this.testPackageId = results[0].testPackageId;\n            this.testPackageName = results[0].packageName;\n            this.testPackageTests = results[0].testSettings;\n        } else {\n            this.errorMessage = \"Error: Test Package does not exist.\"\n        }\n      }\n    }\n}\n</script>"]}]}