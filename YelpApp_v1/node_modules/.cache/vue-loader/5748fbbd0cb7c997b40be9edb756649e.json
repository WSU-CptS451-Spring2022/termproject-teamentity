{"remainingRequest":"/Users/brandonluy/Desktop/admin-website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brandonluy/Desktop/admin-website/src/components/EnrollClient.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brandonluy/Desktop/admin-website/src/components/EnrollClient.vue","mtime":1639724274000},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/cache-loader/dist/cjs.js","mtime":1648530004744},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/babel-loader/lib/index.js","mtime":1648530005330},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/cache-loader/dist/cjs.js","mtime":1648530004744},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/vue-loader/lib/index.js","mtime":1648530005500}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["EnrollClient.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"EnrollClient.vue","sourceRoot":"src/components","sourcesContent":["<!-- Component page for Client Registration, takes fields Client Name, Email Address, and Phone Number -->\n<template>\n  <div class=\"container\">\n    \n    <!-- \"Enroll New Client\" page header -->\n    <div style=\"padding-bottom:25px; padding-top:25px\">\n        <h1>Enroll New Client</h1>\n    </div>\n\n        <!-- Form Components -->\n        <b-col cols=\"5\">\n            <h5 style=\"padding-bottom:10px\"> Provide Client Contact Information </h5>\n            <!-- Client Name -->\n            <div class=\"form-group\" style=\"padding-bottom:10px\">\n                <label>Client Name</label>\n                <b-form-input id=\"client-name-input\" type=\"text\" class=\"form-control form-control-md\" v-model=\"clientName\" aria-describedby=\"name-feedback\" :state=\"nameValid\" @input=\"validateName\"/>\n                <b-form-invalid-feedback id=\"name-feedback\">{{nameFeedback}}</b-form-invalid-feedback>\n            </div>\n\n            <!-- Email Address -->\n            <div class=\"form-group\" style=\"padding-bottom:10px\">\n                <label>Email Address</label>\n                <b-form-input id=\"email-input\" type=\"email\" class=\"form-control form-control-md\" v-model=\"emailAddress\" aria-describedby=\"email-feedback\" :state=\"emailValid\" @input=\"validateEmail\"/>\n                <b-form-invalid-feedback id=\"email-feedback\">{{emailFeedback}}</b-form-invalid-feedback>\n            </div>\n\n            <!-- Phone Number -->\n            <div class=\"form-group\" style=\"padding-bottom:10px\">\n                <label>Phone Number</label>\n                <b-form-input id=\"phone-input\" type=\"tel\" class=\"form-control form-control-md\" v-model=\"phoneNumber\" aria-describedby=\"phone-feedback\" :state=\"phoneValid\" @input=\"validatePhoneNumber\"/>\n                <b-form-invalid-feedback id=\"phone-feedback\">{{phoneFeedback}}</b-form-invalid-feedback>\n            </div>\n        </b-col>\n\n        <!-- Enroll Clients in Tests -->\n        <b-col cols=\"8\">\n            <h5 style=\"padding-bottom:10px\"> Enroll Client in Test Packages </h5>\n            <md-table v-model=\"testPackages\" @md-selected=\"onSelect\">\n              <md-table-row slot=\"md-table-row\" slot-scope=\"{ item }\" md-selectable=\"multiple\">\n                <md-table-cell md-label=\"Name\" md-sort-by=\"name\">{{ item.packageName }}</md-table-cell>\n                <md-table-cell md-label=\"Number of Tests\" md-sort-by=\"numTests\">{{ item.testSettings.length }}</md-table-cell>\n              </md-table-row>\n            </md-table>\n        </b-col>\n\n        <!-- Error Message -->\n        <b-col cols=\"5\">\n            <div id=\"client-enroll-error-message\" style=\"color:red;padding-top:10px\">{{errorMessage}}</div>\n        </b-col>\n\n        <!-- Buttons -->\n        <div>\n            <b-col cols=\"5\">\n            <b-button-toolbar style=\"padding-top:10px;padding-bottom:25px\">\n                <!-- Enroll Button -->\n                <b-button-group>\n                    <b-button id=\"enroll-client\" v-show=\"!loading\" variant=\"success\" @click=\"postNewClient()\">\n                        <b-icon icon=\"plus-circle\"></b-icon>\n                        Enroll\n                    </b-button>\n                </b-button-group>\n                <!-- Submitting spinner -->\n                <b-button-group>\n                    <b-button v-show=\"loading\" variant=\"success\" disabled>\n                        <b-spinner small></b-spinner>\n                        Submitting...\n                    </b-button>\n                </b-button-group>\n                <!-- Cancel -->\n                <b-button-group class=\"mx-1\">\n                    <b-button id=\"cancel-enroll-client\" variant=\"danger\" @click=\"cancelEnrollment()\" :disabled=\"loading\">\n                        Cancel\n                    </b-button>\n                </b-button-group>\n            </b-button-toolbar>\n            </b-col>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'EnrollClient',\n        data() {\n            return {\n                clientName: \"\",\n                emailAddress: \"\",\n                phoneNumber: \"\",\n                loading: false,\n                errorMessage: \"\",\n                nameValid: null,\n                nameFeedback: \"\",\n                emailValid: null,\n                emailFeedback: \"\",\n                phoneValid: null,\n                phoneFeedback: \"\",\n                selected: [],\n                testPackages: [],\n            }\n        },\n        mounted () {\n            // If there aren't any Test Packages in the state store, retrieve them from API.\n            if (this.$store.state.testPackages.length == 0) {\n              this.$store.dispatch('getTestPackages').then((result) => {\n                this.testPackages = this.$store.state.testPackages;\n              });\n            } else {\n                this.testPackages = this.$store.state.testPackages;\n            }\n        },\n        methods: {\n            onSelect (items) {\n                this.selected = items;\n            },\n            postNewClient() {\n                var internal = this;\n\n                // if the input is valid, call the postClient mutation method.\n                if (this.nameValid && this.emailValid && this.phoneValid) {\n                    \n                    internal.loading = true;\n                    internal.errorMessage = \"\"; // reF error message if there was one\n                    \n                    try { \n                        this.$store.dispatch ('postClient', { name: internal.clientName, email: internal.emailAddress, phoneNumber: internal.phoneNumber, testPackagesToEnroll: this.selected })\n                        .then((status) => {\n\n                            // check if status code indicates success or failure\n                            if (status == 200) {\n\n                                // create Toast to inform user that Client enrollment was successful\n                                this.$root.$bvToast.toast('Client ' + internal.clientName + ' was successfully enrolled.', {\n                                    title: 'Success',\n                                    variant: 'success',\n                                });\n\n                                // redirect user back to the Manage Clients page if success\n                                this.$router.push({ path: '/clients' });\n                            } else if (status == 500) {\n                                // there was a problem with an input\n                                internal.loading = false;\n                                internal.errorMessage = \"Could not enroll Client due to an invalid form value.\";\n                            } else {\n                                // stay and note that there was an error if some other failure\n                                internal.loading = false;\n                                internal.errorMessage = \"There was a problem enrolling this Client. Please try again.\";\n                            }\n                        }).catch((error) => {\n                            internal.loading = false;\n                            internal.errorMessage = \"There was a problem enrolling this Client. Please try again.\";\n                            console.log(\"ERROR:\", error);\n                        }\n                        );\n                    } catch (error) {\n                        internal.loading = false;\n                        internal.errorMessage = \"There was a problem enrolling this Client. Please try again.\";\n                        console.log(\"ERROR:\", error);\n                    }\n                } else {\n                    // if there is invalid/missing input in form, indicate this to the user.\n                    internal.errorMessage = \"Please fill out the form as indicated above.\"\n                }\n            },\n            cancelEnrollment() {\n                // return back to Manage Clients page if user clicks Cancel\n                this.$router.push({ path: '/clients' });\n            },\n            validateName() {\n                // validate that Client name is at least 3 characters and less than or equal to 100 characters\n                if (this.clientName.length >= 3 && this.clientName.length <= 100) {\n                    this.nameValid = true;\n                    this.nameFeedback = \"\";\n                } else if (this.clientName.length < 3) {\n                    this.nameValid = false;\n                    this.nameFeedback = \"Please enter at least 3 characters.\";\n                } else {\n                    this.nameValid = false;\n                    this.nameFeedback = \"Client names are limited to 100 characters in length.\";\n                }\n            },\n            validateEmail() {\n                // validate that email is at least 3 characters and less than or equal to 320 characters (https://tools.ietf.org/html/rfc3696#section-3)\n                if (this.emailAddress.length >= 3 && this.emailAddress.length <= 320) {\n                    \n                    const dotPosition = this.emailAddress.search('[.]');\n                    const atPosition = this.emailAddress.search('@');\n                    \n                    // validate that email has an @ sign and a .\n                    if ((atPosition > -1) && (dotPosition > -1) && (dotPosition != this.emailAddress.length - 1)) {\n                        this.emailValid = true;\n                        this.emailFeedback = \"\";\n                    } else {\n                        this.emailValid = false;\n                        this.emailFeedback = \"Please enter a valid email address.\"\n                    }\n                } else if (this.emailAddress.length < 3) {\n                    this.emailValid = false;\n                    this.emailFeedback = \"Please enter at least 3 characters.\";\n                } else {\n                    this.emailValid = false;\n                    this.emailFeedback = \"Email addresses are limited to 320 characters in length.\";\n                }\n\n            },\n            validatePhoneNumber() {\n\n                // get just the numbers from the string inputted for the Client's phone number.\n                const formattingRemoved = this.phoneNumber.replace(/[^0-9]/g,\"\");\n\n                // validate that phone number has at least 10 numbers, <= 20 characters total\n                if ((formattingRemoved.length >= 10) && (this.phoneNumber.length <= 20)) {\n                    \n                    // perform formatting on phone number\n                    if (formattingRemoved.length == 10) {\n                        // format domestic phone numbers, ex: 123-555-1234\n                        this.phoneNumber = formattingRemoved.replace(/(\\d{3})(\\d{3})(\\d{4})/, \"$1-$2-$3\");\n                    } else if (formattingRemoved.length == 11) {\n                        // format international phone numbers, ex: +1-123-555-1234\n                        this.phoneNumber = formattingRemoved.replace(/(\\d{1})(\\d{3})(\\d{3})(\\d{4})/, \"+$1-$2-$3-$4\");\n                    }\n\n                    this.phoneValid = true;\n                    this.phoneFeedback = \"\";\n                } else {\n                    this.phoneValid = false;\n                    this.phoneFeedback = \"Please enter a valid phone number.\";\n                }\n            }\n        },\n    }\n</script>"]}]}