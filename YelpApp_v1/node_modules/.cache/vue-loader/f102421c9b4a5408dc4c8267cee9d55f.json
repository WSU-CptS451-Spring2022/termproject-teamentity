{"remainingRequest":"/Users/brandonluy/Desktop/admin-website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brandonluy/Desktop/admin-website/src/components/ManageTestPackages.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brandonluy/Desktop/admin-website/src/components/ManageTestPackages.vue","mtime":1639724274000},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/cache-loader/dist/cjs.js","mtime":1648530004744},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/thread-loader/dist/cjs.js","mtime":1648530004696},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/babel-loader/lib/index.js","mtime":1648530005330},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/cache-loader/dist/cjs.js","mtime":1648530004744},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/vue-loader/lib/index.js","mtime":1648530005500}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IE1kVGFibGUgfSBmcm9tICd2dWUtbWF0ZXJpYWwvZGlzdC9jb21wb25lbnRzJzsKaW1wb3J0ICd2dWUtbWF0ZXJpYWwvZGlzdC92dWUtbWF0ZXJpYWwubWluLmNzcycKaW1wb3J0ICd2dWUtbWF0ZXJpYWwvZGlzdC90aGVtZS9kZWZhdWx0LmNzcycKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwpWdWUudXNlKE1kVGFibGUpOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ01hbmFnZVRlc3RQYWNrYWdlcycsCiAgICBjb21wb25lbnRzOiB7CiAgICB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBjdXJTZWFyY2g6ICIiLAogICAgICAgIH0KICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIGZpbHRlcmVkVGVzdFBhY2thZ2VzKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5zZWFyY2hUZXN0UGFja2FnZXMoKTsKICAgICAgICB9CiAgICB9LAogICAgbW91bnRlZCAoKSB7CiAgICAgIHZhciBpbnRlcm5hbCA9IHRoaXM7CgogICAgICAvLyB3aGVuIHRoZSBjb21wb25lbnQgbW91bnRzLCBxdWVyeSB3aGljaCBUZXN0IFBhY2thZ2VzIGFyZSBhc3NvY2lhdGVkIHdpdGggdGhlIEN1c3RvbWVyICh1c2VyKS4KICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2dldFRlc3RQYWNrYWdlcycpOwoKICAgIH0sCiAgICBwcm9wczogewogICAgICAgIHNlYXJjaFZhbDogU3RyaW5nCiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIHNlYXJjaFRlc3RQYWNrYWdlcygpIHsKICAgICAgICAgICAgdmFyIGludGVybmFsID0gdGhpczsKCiAgICAgICAgICAgIC8vIGlmIHRoZXJlIGFyZW4ndCBhbnkgVGVzdCBQYWNrYWdlcywgcmV0dXJuIGFuIGVtcHR5IGFycmF5CiAgICAgICAgICAgIGlmICh0aGlzLiRzdG9yZS5zdGF0ZS50ZXN0UGFja2FnZXMgPT0gbnVsbCB8fCB0aGlzLiRzdG9yZS5zdGF0ZS50ZXN0UGFja2FnZXMubGVuZ3RoID09IDApIHsKICAgICAgICAgICAgICAgIHJldHVybiBbXTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gbWFrZSBzZWFyY2ggbG93ZXJjYXNlIHNvIHRoYXQgaXQgaXNuJ3QgY2FzZSBzZW5zaXRpdmUKICAgICAgICAgICAgY29uc3Qgc2VhcmNoU3RyaW5nID0gaW50ZXJuYWwuY3VyU2VhcmNoLnRvTG93ZXJDYXNlKCk7CgogICAgICAgICAgICAvLyBJZiBhbnkgcGFydCBvZiB0aGUgQ2xpZW50J3MgbmFtZSwgZW1haWwsIG9yIHBob25lIG51bWJlciBtYXRjaCB0aGUgc2VhcmNoIHN0cmluZywgc2hvdyB0aGVtIGFzIGEgc2VhcmNoIHJlc3VsdAogICAgICAgICAgICBjb25zdCByZXN1bHRzID0gdGhpcy4kc3RvcmUuc3RhdGUudGVzdFBhY2thZ2VzLmZpbHRlciggZnVuY3Rpb24odGVzdCkgewogICAgICAgICAgICAgICAgaWYgKHRlc3QucGFja2FnZU5hbWUudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2hTdHJpbmcpKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRlc3Q7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICByZXR1cm4gcmVzdWx0czsKICAgICAgICB9LAoKICAgICAgICByZWRpcmVjdFRvQ3JlYXRlVGVzdFBhY2thZ2UoKSB7CiAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgcGF0aDogJy9jcmVhdGV0ZXN0cGFja2FnZScgfSk7CiAgICAgICAgfSwKICAgIH0KfQoKCg=="},{"version":3,"sources":["ManageTestPackages.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"ManageTestPackages.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <!-- \"Manage Test Packages\" page header -->\n    <div style=\"padding-bottom:50px; padding-top:25px\">\n        <h1>Manage Test Packages</h1>\n    </div>\n    <div style=\"padding-bottom:25px\">\n        <b-row>\n            <b-col>\n                <!-- Search bar -->\n                <b-input-group>\n                    <!-- Activates search method when input in search bar changes -->\n                    <b-form-input placeholder=\"Search...\" @input=\"searchTestPackages()\" v-model=\"curSearch\"></b-form-input>\n                    <b-input-group-append>\n                        <!-- search button, mostly aesthetic, but also activates search method when clicked -->\n                        <b-button variant=\"outline-secondary\" @click=\"searchTestPackages()\">\n                            <b-icon icon=\"search\"></b-icon>\n                        </b-button>\n                    </b-input-group-append>\n                </b-input-group>\n            </b-col>\n            <b-col>\n                <!-- Enroll new Client button, will redirect user to New Client page in the future -->\n                <b-button variant=\"success\" title=\"Note\" @click=\"redirectToCreateTestPackage()\">\n                    <b-icon icon=\"plus-circle\"></b-icon>\n                    Create New Test Package\n                </b-button>\n            </b-col>\n        </b-row>\n    </div>\n    <div>\n        <!-- Client table, renders the filteredClients (Clients that meet current search criteria) -->\n        <md-table v-model=\"filteredTestPackages\" style=\"padding-bottom:50px\">\n            <md-table-row slot=\"md-table-row\" slot-scope=\"{ item }\">\n                <md-table-cell md-label=\"Name\" md-sort-by=\"name\"><router-link :to=\"`/testpackages/${item.testPackageId}`\" class=\"nav-link\">{{ item.packageName }}</router-link></md-table-cell>\n                <md-table-cell md-label=\"Number of Tests\" md-sort-by=\"numTests\">{{ item.testSettings.length }}</md-table-cell>\n            </md-table-row>\n        </md-table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { MdTable } from 'vue-material/dist/components';\nimport 'vue-material/dist/vue-material.min.css'\nimport 'vue-material/dist/theme/default.css'\nimport Vue from 'vue';\nVue.use(MdTable);\n\nexport default {\n    name: 'ManageTestPackages',\n    components: {\n    },\n    data() {\n        return {\n            curSearch: \"\",\n        }\n    },\n    computed: {\n        filteredTestPackages() {\n            return this.searchTestPackages();\n        }\n    },\n    mounted () {\n      var internal = this;\n\n      // when the component mounts, query which Test Packages are associated with the Customer (user).\n      this.$store.dispatch('getTestPackages');\n\n    },\n    props: {\n        searchVal: String\n    },\n    methods: {\n        searchTestPackages() {\n            var internal = this;\n\n            // if there aren't any Test Packages, return an empty array\n            if (this.$store.state.testPackages == null || this.$store.state.testPackages.length == 0) {\n                return [];\n            }\n\n            // make search lowercase so that it isn't case sensitive\n            const searchString = internal.curSearch.toLowerCase();\n\n            // If any part of the Client's name, email, or phone number match the search string, show them as a search result\n            const results = this.$store.state.testPackages.filter( function(test) {\n                if (test.packageName.toLowerCase().includes(searchString)) {\n                    return test;\n                }\n            });\n            return results;\n        },\n\n        redirectToCreateTestPackage() {\n            this.$router.push({ path: '/createtestpackage' });\n        },\n    }\n}\n\n\n</script>\n\n<style>\n</style>\n"]}]}