{"remainingRequest":"/Users/brandonluy/Desktop/admin-website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brandonluy/Desktop/admin-website/src/components/EnrollClientInTestPackages.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brandonluy/Desktop/admin-website/src/components/EnrollClientInTestPackages.vue","mtime":1639724274000},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/cache-loader/dist/cjs.js","mtime":1648530004744},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/babel-loader/lib/index.js","mtime":1648530005330},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/cache-loader/dist/cjs.js","mtime":1648530004744},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/vue-loader/lib/index.js","mtime":1648530005500}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdFbnJvbGxDbGllbnRJblRlc3RQYWNrYWdlcycsCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGNsaWVudElkOiBudWxsLAogICAgICAgICAgICBzZWxlY3RlZDogW10sCiAgICAgICAgICAgIHRlc3RQYWNrYWdlczogW10sCiAgICAgICAgICAgIHRlc3RQYWNrYWdlRW5yb2xsbWVudHM6IFtdLAogICAgICAgICAgICBlcnJvck1lc3NhZ2U6ICIiLAogICAgICAgICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgICB9CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICBmaWx0ZXJlZFRlc3RQYWNrYWdlcygpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuZmlsdGVyT3V0RW5yb2xsZWRQYWNrYWdlcygpOwogICAgICAgIH0KICAgIH0sCiAgICBtb3VudGVkICgpIHsKICAgICAgICAvLyBHZXQgdGhlIGNsaWVudCBJRCBmcm9tIHRoZSByb3V0ZS4KICAgICAgICBjb25zdCBjbGllbnRJZEZyb21Sb3V0ZSA9IHRoaXMuJHJvdXRlLnBhcmFtcy5jbGllbnRpZDsKICAgICAgICB0aGlzLmNsaWVudElkID0gY2xpZW50SWRGcm9tUm91dGU7CiAgICAgICAgCiAgICAgICAgLy8gSWYgdGhlcmUgYXJlbid0IGFueSBUZXN0IFBhY2thZ2VzIGluIHRoZSBzdGF0ZSBzdG9yZSwgcmV0cmlldmUgdGhlbSBmcm9tIEFQSS4KICAgICAgICBpZiAodGhpcy4kc3RvcmUuc3RhdGUudGVzdFBhY2thZ2VzLmxlbmd0aCA9PSAwKSB7CiAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZ2V0VGVzdFBhY2thZ2VzJykudGhlbigocmVzdWx0KSA9PiB7CiAgICAgICAgICAgIHRoaXMudGVzdFBhY2thZ2VzID0gdGhpcy4kc3RvcmUuc3RhdGUudGVzdFBhY2thZ2VzOwogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdGhpcy50ZXN0UGFja2FnZXMgPSB0aGlzLiRzdG9yZS5zdGF0ZS50ZXN0UGFja2FnZXM7CiAgICAgICAgfQoKICAgICAgICAvLyBnZXQgdGhlIFRlc3QgUGFja2FnZXMgdGhlIENsaWVudCBpcyBhbHJlYWR5IGVucm9sbGVkIGluCiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2dldENsaWVudFRlc3RQYWNrYWdlRW5yb2xsbWVudHMnLCB7IGNsaWVudElkOiBjbGllbnRJZEZyb21Sb3V0ZSB9KS50aGVuKChyZXN1bHQpID0+IHsKICAgICAgICAgICAgdGhpcy50ZXN0UGFja2FnZUVucm9sbG1lbnRzID0gdGhpcy4kc3RvcmUuc3RhdGUuY2xpZW50VGVzdFBhY2thZ2VFbnJvbGxtZW50OwogICAgICAgIH0pOwogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBvblNlbGVjdCAoaXRlbXMpIHsKICAgICAgICAgICAgdGhpcy5zZWxlY3RlZCA9IGl0ZW1zOwogICAgICAgIH0sCiAgICAgICAgcG9zdE5ld0Vucm9sbG1lbnRzKCkgewogICAgICAgICAgICB2YXIgaW50ZXJuYWwgPSB0aGlzOwoKICAgICAgICAgICAgaWYgKGludGVybmFsLnNlbGVjdGVkLmxlbmd0aCA8IDEpIHsKICAgICAgICAgICAgICAgIGludGVybmFsLmVycm9yTWVzc2FnZSA9ICJQbGVhc2Ugc2VsZWN0IGF0IGxlYXN0IG9uZSBUZXN0IFBhY2thZ2UuIgogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgaW50ZXJuYWwuZXJyb3JNZXNzYWdlID0gIiI7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHRyeSB7IAogICAgICAgICAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2ggKCdwb3N0Q2xpZW50VGVzdFBhY2thZ2VFbnJvbGxtZW50cycsIHsgdGVzdFBhY2thZ2VzVG9FbnJvbGw6IGludGVybmFsLnNlbGVjdGVkLCBjbGllbnRJZDogaW50ZXJuYWwuY2xpZW50SWQgfSkKICAgICAgICAgICAgICAgIC50aGVuKChzdGF0dXMpID0+IHsKCiAgICAgICAgICAgICAgICAgICAgLy8gY2hlY2sgaWYgc3RhdHVzIGNvZGUgaW5kaWNhdGVzIHN1Y2Nlc3Mgb3IgZmFpbHVyZQogICAgICAgICAgICAgICAgICAgIGlmIChzdGF0dXMgPT0gMjAwKSB7CgogICAgICAgICAgICAgICAgICAgICAgICAvLyBjcmVhdGUgVG9hc3QgdG8gaW5mb3JtIHVzZXIgdGhhdCBDbGllbnQgZW5yb2xsbWVudCB3YXMgc3VjY2Vzc2Z1bAogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRyb290LiRidlRvYXN0LnRvYXN0KCdTdWNjZXNzZnVsbHkgZW5yb2xsZWQgQ2xpZW50IGluIFRlc3QgUGFja2FnZScsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiAnU3VjY2VzcycsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXJpYW50OiAnc3VjY2VzcycsCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgICAgICAgICAgLy8gcmVkaXJlY3QgdXNlciBiYWNrIHRvIHRoZSBNYW5hZ2UgQ2xpZW50cyBwYWdlIGlmIHN1Y2Nlc3MKICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcGF0aCA9ICIvY2xpZW50cy8iICsgdGhpcy5jbGllbnRJZDsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goeyBwYXRoIH0pOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHN0YXkgYW5kIG5vdGUgdGhhdCB0aGVyZSB3YXMgYW4gZXJyb3IgaWYgZmFpbHVyZQogICAgICAgICAgICAgICAgICAgICAgICBpbnRlcm5hbC5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgICAgIGludGVybmFsLmVycm9yTWVzc2FnZSA9ICJUaGVyZSB3YXMgYSBwcm9ibGVtIGVucm9sbGluZyB0aGlzIENsaWVudCBpbiBUZXN0IFBhY2thZ2VzLiBQbGVhc2UgdHJ5IGFnYWluLiI7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSkuY2F0Y2goKGVycm9yKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgaW50ZXJuYWwubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgICAgICAgICAgIGludGVybmFsLmVycm9yTWVzc2FnZSA9ICJUaGVyZSB3YXMgYSBwcm9ibGVtIGVucm9sbGluZyB0aGlzIENsaWVudCBpbiBUZXN0IFBhY2thZ2VzLiBQbGVhc2UgdHJ5IGFnYWluLiI7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coIkVSUk9SOiIsIGVycm9yKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgICAgICBpbnRlcm5hbC5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgICAgICBpbnRlcm5hbC5lcnJvck1lc3NhZ2UgPSAiVGhlcmUgd2FzIGEgcHJvYmxlbSBlbnJvbGxpbmcgdGhpcyBDbGllbnQgaW4gVGVzdCBQYWNrYWdlcy4gUGxlYXNlIHRyeSBhZ2Fpbi4iOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coIkVSUk9SOiIsIGVycm9yKTsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgY2FuY2VsRW5yb2xsbWVudCgpIHsKICAgICAgICAgICAgLy8gcmV0dXJuIGJhY2sgdG8gQ2xpZW50IEluZm9ybWF0aW9uIHBhZ2UgaWYgdXNlciBjbGlja3MgQ2FuY2VsCiAgICAgICAgICAgIGNvbnN0IHBhdGggPSAiL2NsaWVudHMvIiArIHRoaXMuY2xpZW50SWQ7CiAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgcGF0aCB9KTsKICAgICAgICB9LAogICAgICAgIGZpbHRlck91dEVucm9sbGVkUGFja2FnZXMoKSB7CiAgICAgICAgICAgIHZhciBpbnRlcm5hbCA9IHRoaXM7CgogICAgICAgICAgICAvLyBpZiB0aGVyZSBhcmVuJ3QgYW55IFRlc3QgUGFja2FnZXMsIHJldHVybiBhbiBlbXB0eSBhcnJheS4KICAgICAgICAgICAgaWYgKGludGVybmFsLnRlc3RQYWNrYWdlcyA9PSBudWxsIHx8IGludGVybmFsLnRlc3RQYWNrYWdlcy5sZW5ndGggPT0gMCkgewogICAgICAgICAgICAgICAgcmV0dXJuIFtdOwogICAgICAgICAgICB9CgogICAgICAgICAgICAvLyBpZiB0aGUgQ2xpZW50IGlzbid0IGVucm9sbGVkIGluIGFueSBUZXN0IFBhY2thZ2VzIHlldCwgcmV0dXJuIGFsbCBUZXN0IFBhY2thZ2VzLgogICAgICAgICAgICBpZiAoaW50ZXJuYWwudGVzdFBhY2thZ2VFbnJvbGxtZW50cyA9PSBudWxsIHx8IGludGVybmFsLnRlc3RQYWNrYWdlRW5yb2xsbWVudHMubGVuZ3RoID09IDApIHsKICAgICAgICAgICAgICAgIHJldHVybiBpbnRlcm5hbC50ZXN0UGFja2FnZXM7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGNvbnN0IHJlc3VsdHMgPSBpbnRlcm5hbC50ZXN0UGFja2FnZXMuZmlsdGVyKCBmdW5jdGlvbih0ZXN0KSB7CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGNvbnN0IG1hdGNoaW5nRW5yb2xsbWVudCA9IGludGVybmFsLnRlc3RQYWNrYWdlRW5yb2xsbWVudHMuZmlsdGVyICggZnVuY3Rpb24oZW5yb2xsZWRUZXN0KSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKGVucm9sbGVkVGVzdC50ZXN0UGFja2FnZUlkID09IHRlc3QudGVzdFBhY2thZ2VJZCkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZW5yb2xsZWRUZXN0OwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGlmIChtYXRjaGluZ0Vucm9sbG1lbnQubGVuZ3RoID09IDApIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGVzdDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHJldHVybiByZXN1bHRzOwogICAgICAgIH0KICAgIH0sCn0K"},{"version":3,"sources":["EnrollClientInTestPackages.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"EnrollClientInTestPackages.vue","sourceRoot":"src/components","sourcesContent":["<!-- Component page for Client Registration, takes fields Client Name, Email Address, and Phone Number -->\n<template>\n  <div class=\"container\">\n    \n    <!-- \"Enroll New Client\" page header -->\n    <div style=\"padding-bottom:25px; padding-top:25px\">\n        <h1>Enroll Client in Test Packages</h1>\n    </div>\n\n        <!-- Enroll Clients in Tests -->\n        <b-col cols=\"8\">\n            <md-table v-model=\"filteredTestPackages\" @md-selected=\"onSelect\">\n              <md-table-row slot=\"md-table-row\" slot-scope=\"{ item }\" md-selectable=\"multiple\">\n                <md-table-cell md-label=\"Name\" md-sort-by=\"name\">{{ item.packageName }}</md-table-cell>\n                <md-table-cell md-label=\"Number of Tests\" md-sort-by=\"numTests\">{{ item.testSettings.length }}</md-table-cell>\n              </md-table-row>\n            </md-table>\n        </b-col>\n\n        <!-- Error Message -->\n        <b-col cols=\"5\">\n            <div id=\"client-enroll-error-message\" style=\"color:red;padding-top:10px\">{{errorMessage}}</div>\n        </b-col>\n\n        <!-- Buttons -->\n        <div>\n            <b-col cols=\"5\">\n            <b-button-toolbar style=\"padding-top:10px;padding-bottom:25px\">\n                <!-- Enroll Button -->\n                <b-button-group>\n                    <b-button id=\"enroll-client\" v-show=\"!loading\" variant=\"success\" @click=\"postNewEnrollments()\">\n                        <b-icon icon=\"plus-circle\"></b-icon>\n                        Enroll\n                    </b-button>\n                </b-button-group>\n                <!-- Submitting spinner -->\n                <b-button-group>\n                    <b-button v-show=\"loading\" variant=\"success\" disabled>\n                        <b-spinner small></b-spinner>\n                        Submitting...\n                    </b-button>\n                </b-button-group>\n                <!-- Cancel -->\n                <b-button-group class=\"mx-1\">\n                    <b-button id=\"cancel-enroll-client\" variant=\"danger\" @click=\"cancelEnrollment()\" :disabled=\"loading\">\n                        Cancel\n                    </b-button>\n                </b-button-group>\n            </b-button-toolbar>\n            </b-col>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'EnrollClientInTestPackages',\n        data() {\n            return {\n                clientId: null,\n                selected: [],\n                testPackages: [],\n                testPackageEnrollments: [],\n                errorMessage: \"\",\n                loading: false,\n            }\n        },\n        computed: {\n            filteredTestPackages() {\n                return this.filterOutEnrolledPackages();\n            }\n        },\n        mounted () {\n            // Get the client ID from the route.\n            const clientIdFromRoute = this.$route.params.clientid;\n            this.clientId = clientIdFromRoute;\n            \n            // If there aren't any Test Packages in the state store, retrieve them from API.\n            if (this.$store.state.testPackages.length == 0) {\n              this.$store.dispatch('getTestPackages').then((result) => {\n                this.testPackages = this.$store.state.testPackages;\n              });\n            } else {\n                this.testPackages = this.$store.state.testPackages;\n            }\n\n            // get the Test Packages the Client is already enrolled in\n            this.$store.dispatch('getClientTestPackageEnrollments', { clientId: clientIdFromRoute }).then((result) => {\n                this.testPackageEnrollments = this.$store.state.clientTestPackageEnrollment;\n            });\n        },\n        methods: {\n            onSelect (items) {\n                this.selected = items;\n            },\n            postNewEnrollments() {\n                var internal = this;\n\n                if (internal.selected.length < 1) {\n                    internal.errorMessage = \"Please select at least one Test Package.\"\n                    return;\n                } else {\n                    internal.errorMessage = \"\";\n                }\n\n                try { \n                    this.$store.dispatch ('postClientTestPackageEnrollments', { testPackagesToEnroll: internal.selected, clientId: internal.clientId })\n                    .then((status) => {\n\n                        // check if status code indicates success or failure\n                        if (status == 200) {\n\n                            // create Toast to inform user that Client enrollment was successful\n                            this.$root.$bvToast.toast('Successfully enrolled Client in Test Package', {\n                                title: 'Success',\n                                variant: 'success',\n                            });\n\n                            // redirect user back to the Manage Clients page if success\n                            const path = \"/clients/\" + this.clientId;\n                            this.$router.push({ path });\n                        } else {\n                            // stay and note that there was an error if failure\n                            internal.loading = false;\n                            internal.errorMessage = \"There was a problem enrolling this Client in Test Packages. Please try again.\";\n                        }\n                    }).catch((error) => {\n                        internal.loading = false;\n                        internal.errorMessage = \"There was a problem enrolling this Client in Test Packages. Please try again.\";\n                        console.log(\"ERROR:\", error);\n                    }\n                    );\n                } catch (error) {\n                    internal.loading = false;\n                    internal.errorMessage = \"There was a problem enrolling this Client in Test Packages. Please try again.\";\n                    console.log(\"ERROR:\", error);\n                }\n            },\n            cancelEnrollment() {\n                // return back to Client Information page if user clicks Cancel\n                const path = \"/clients/\" + this.clientId;\n                this.$router.push({ path });\n            },\n            filterOutEnrolledPackages() {\n                var internal = this;\n\n                // if there aren't any Test Packages, return an empty array.\n                if (internal.testPackages == null || internal.testPackages.length == 0) {\n                    return [];\n                }\n\n                // if the Client isn't enrolled in any Test Packages yet, return all Test Packages.\n                if (internal.testPackageEnrollments == null || internal.testPackageEnrollments.length == 0) {\n                    return internal.testPackages;\n                }\n\n                const results = internal.testPackages.filter( function(test) {\n                    \n                    const matchingEnrollment = internal.testPackageEnrollments.filter ( function(enrolledTest) {\n                        if (enrolledTest.testPackageId == test.testPackageId) {\n                            return enrolledTest;\n                        }\n                    })\n                    \n                    if (matchingEnrollment.length == 0) {\n                        return test;\n                    }\n                });\n                return results;\n            }\n        },\n    }\n</script>"]}]}