{"remainingRequest":"/Users/brandonluy/Desktop/admin-website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brandonluy/Desktop/admin-website/src/components/TestResults.vue?vue&type=template&id=a80e79f8&","dependencies":[{"path":"/Users/brandonluy/Desktop/admin-website/src/components/TestResults.vue","mtime":1639724274000},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/cache-loader/dist/cjs.js","mtime":1648530004744},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1648530005839},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/cache-loader/dist/cjs.js","mtime":1648530004744},{"path":"/Users/brandonluy/Desktop/admin-website/node_modules/vue-loader/lib/index.js","mtime":1648530005500}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}